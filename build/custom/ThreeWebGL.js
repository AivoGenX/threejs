// ThreeWebGL.js r42 - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!window.Int32Array)window.Int32Array=Array,window.Float32Array=Array;THREE.Color=function(b){this.setHex(b)};
THREE.Color.prototype={copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;this.hex=b.hex},setHex:function(b){this.hex=~~b&16777215;this.updateRGB()},setRGB:function(b,d,e){this.r=b;this.g=d;this.b=e;this.updateHex()},setHSV:function(b,d,e){var f,g,h,j,i,k;if(e==0)f=g=h=0;else switch(j=Math.floor(b*6),i=b*6-j,b=e*(1-d),k=e*(1-d*i),d=e*(1-d*(1-i)),j){case 1:f=k;g=e;h=b;break;case 2:f=b;g=e;h=d;break;case 3:f=b;g=k;h=e;break;case 4:f=d;g=b;h=e;break;case 5:f=e;g=b;h=k;break;case 6:case 0:f=e,g=d,h=b}this.setRGB(f,
g,h)},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGB:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},clone:function(){return new THREE.Color(this.hex)}};
THREE._Vector=function(){function b(){return this.multiplyScalar(-1)}function d(){return this.lengthSq()<1.0E-4}function e(){return Math.sqrt(this.lengthSq())}function f(){return this.divideScalar(this.length())}function g(b){return this.normalize().multiplyScalar(b)}function h(b){return this.clone().subSelf(b).lengthSq()}function j(b){return Math.sqrt(this.distanceToSquared(b))}return function(){this.negate=b;this.isZero=d;this.length=e;this.setLength=g;this.normalize=this.unit=f;this.distanceToSquared=
h;this.distanceTo=j}}();THREE.Vector2=function(b,d){this.set(b||0,d||0)};
THREE.Vector2.prototype={set:function(b,d){this.x=b;this.y=d;return this},copy:function(b){this.x=b.x;this.y=b.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(b,d){this.x=b.x+d.x;this.y=b.y+d.y;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;return this},sub:function(b,d){this.x=b.x-d.x;this.y=b.y-d.y;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){b?
(this.x/=b,this.y/=b):this.set(0,0);return this},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},equals:function(b){return b.x==this.x&&b.y==this.y}};THREE._Vector.call(THREE.Vector2.prototype);THREE.Vector3=function(b,d,e){this.set(b||0,d||0,e||0)};
THREE.Vector3.prototype={set:function(b,d,e){this.x=b;this.y=d;this.z=e;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(b,d){this.x=b.x+d.x;this.y=b.y+d.y;this.z=b.z+d.z;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},sub:function(b,d){this.x=b.x-d.x;this.y=b.y-d.y;this.z=b.z-d.z;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;return this},multiply:function(b,d){this.x=b.x*d.x;this.y=b.y*d.y;this.z=b.z*d.z;return this},multiplySelf:function(b){this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},divideSelf:function(b){return this.divide(this,b)},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b):this.set(0,0,0);return this},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+
this.y*this.y+this.z*this.z},lengthManhattan:function(){return this.x+this.y+this.z},cross:function(b,d){this.x=b.y*d.z-b.z*d.y;this.y=b.z*d.x-b.x*d.z;this.z=b.x*d.y-b.y*d.x;return this},crossSelf:function(b){return this.set(this.y*b.z-this.z*b.y,this.z*b.x-this.x*b.z,this.x*b.y-this.y*b.x)},setPositionFromMatrix:function(b){this.x=b.n14;this.y=b.n24;this.z=b.n34},setRotationFromMatrix:function(b){var d=Math.cos(this.y);this.y=Math.asin(b.n13);Math.abs(d)>1.0E-5?(this.x=Math.atan2(-b.n23/d,b.n33/
d),this.z=Math.atan2(-b.n12/d,b.n11/d)):(this.x=0,this.z=Math.atan2(b.n21,b.n22))}};THREE._Vector.call(THREE.Vector3.prototype);THREE.Vector4=function(b,d,e,f){this.set(b||0,d||0,e||0,f||1)};
THREE.Vector4.prototype={set:function(b,d,e,f){this.x=b;this.y=d;this.z=e;this.w=f;return this},copy:function(b){return this.set(b.x,b.y,b.z,b.w||1)},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(b,d){this.x=b.x+d.x;this.y=b.y+d.y;this.z=b.z+d.z;this.w=b.w+d.w;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},sub:function(b,d){this.x=b.x-d.x;this.y=b.y-d.y;this.z=b.z-d.z;this.w=b.w-d.w;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):this.set(0,0,0,1);return this},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.dot(this)},lerpSelf:function(b,d){this.x+=(b.x-this.x)*d;this.y+=(b.y-this.y)*d;this.z+=(b.z-this.z)*d;this.w+=(b.w-this.w)*d;return this}};THREE._Vector.call(THREE.Vector4.prototype);
THREE.Ray=function(b,d){this.origin=b||new THREE.Vector3;this.direction=d||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(b){return this.intersectObjects(b.objects)},intersectObjects:function(b){var d,e,f=[];d=0;for(e=b.length;d<e;d++)f=f.concat(this.intersectObject(b[d]));f.sort(function(b,d){return b.distance-d.distance});return f},intersectObject:function(b){function d(b,d,e){var f,e=e.matrixWorld.getPosition();f=e.clone().subSelf(b).dot(d);b=b.clone().addSelf(d.clone().multiplyScalar(f));return e.distanceTo(b)}function e(b,d,e,f){var f=f.clone().subSelf(d),e=e.clone().subSelf(d),
g=b.clone().subSelf(d),b=f.dot(f),d=f.dot(e),f=f.dot(g),h=e.dot(e),e=e.dot(g),g=1/(b*h-d*d),h=(h*f-d*e)*g,b=(b*e-d*f)*g;return h>0&&b>0&&h+b<1}if(b instanceof THREE.Particle){var f=d(this.origin,this.direction,b);if(!f||f>b.scale.x)return[];return[{distance:f,point:b.position,face:null,object:b}]}else if(b instanceof THREE.Mesh){f=d(this.origin,this.direction,b);if(!f||f>b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)))return[];var g,h,j,i,k,n,o,t,w,u,z=b.geometry,
A=z.vertices,D=[],f=0;for(g=z.faces.length;f<g;f++)if(h=z.faces[f],w=this.origin.clone(),u=this.direction.clone(),n=b.matrixWorld,j=n.multiplyVector3(A[h.a].position.clone()),i=n.multiplyVector3(A[h.b].position.clone()),k=n.multiplyVector3(A[h.c].position.clone()),n=h instanceof THREE.Face4?n.multiplyVector3(A[h.d].position.clone()):null,o=b.matrixRotationWorld.multiplyVector3(h.normal.clone()),t=u.dot(o),b.doubleSided||(b.flipSided?t>0:t<0))if(o=o.dot((new THREE.Vector3).sub(j,w))/t,w=w.addSelf(u.multiplyScalar(o)),
h instanceof THREE.Face3)e(w,j,i,k)&&(h={distance:this.origin.distanceTo(w),point:w,face:h,object:b},D.push(h));else if(h instanceof THREE.Face4&&(e(w,j,i,n)||e(w,i,k,n)))h={distance:this.origin.distanceTo(w),point:w,face:h,object:b},D.push(h);return D}else return[]}};
THREE.Rectangle=function(){function b(){h=f-d;j=g-e}var d,e,f,g,h,j,i=!0;this.getX=function(){return d};this.getY=function(){return e};this.getWidth=function(){return h};this.getHeight=function(){return j};this.getLeft=function(){return d};this.getTop=function(){return e};this.getRight=function(){return f};this.getBottom=function(){return g};this.set=function(h,j,o,t){i=!1;d=h;e=j;f=o;g=t;b()};this.addPoint=function(h,j){i?(i=!1,d=h,e=j,f=h,g=j):(d=d<h?d:h,e=e<j?e:j,f=f>h?f:h,g=g>j?g:j);b()};this.add3Points=
function(h,j,o,t,w,u){i?(i=!1,d=h<o?h<w?h:w:o<w?o:w,e=j<t?j<u?j:u:t<u?t:u,f=h>o?h>w?h:w:o>w?o:w,g=j>t?j>u?j:u:t>u?t:u):(d=h<o?h<w?h<d?h:d:w<d?w:d:o<w?o<d?o:d:w<d?w:d,e=j<t?j<u?j<e?j:e:u<e?u:e:t<u?t<e?t:e:u<e?u:e,f=h>o?h>w?h>f?h:f:w>f?w:f:o>w?o>f?o:f:w>f?w:f,g=j>t?j>u?j>g?j:g:u>g?u:g:t>u?t>g?t:g:u>g?u:g);b()};this.addRectangle=function(h){i?(i=!1,d=h.getLeft(),e=h.getTop(),f=h.getRight(),g=h.getBottom()):(d=d<h.getLeft()?d:h.getLeft(),e=e<h.getTop()?e:h.getTop(),f=f>h.getRight()?f:h.getRight(),g=g>
h.getBottom()?g:h.getBottom());b()};this.inflate=function(h){d-=h;e-=h;f+=h;g+=h;b()};this.minSelf=function(h){d=d>h.getLeft()?d:h.getLeft();e=e>h.getTop()?e:h.getTop();f=f<h.getRight()?f:h.getRight();g=g<h.getBottom()?g:h.getBottom();b()};this.instersects=function(b){return Math.min(f,b.getRight())-Math.max(d,b.getLeft())>=0&&Math.min(g,b.getBottom())-Math.max(e,b.getTop())>=0};this.empty=function(){i=!0;g=f=e=d=0;b()};this.isEmpty=function(){return i}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={transpose:function(){var b,d=this.m;b=d[1];d[1]=d[3];d[3]=b;b=d[2];d[2]=d[6];d[6]=b;b=d[5];d[5]=d[7];d[7]=b;return this},transposeIntoArray:function(b){var d=this.m;b[0]=d[0];b[1]=d[3];b[2]=d[6];b[3]=d[1];b[4]=d[4];b[5]=d[7];b[6]=d[2];b[7]=d[5];b[8]=d[8];return this}};THREE.Matrix4=function(b,d,e,f,g,h,j,i,k,n,o,t,w,u,z,A){this.set(b||1,d||0,e||0,f||0,g||0,h||1,j||0,i||0,k||0,n||0,o||1,t||0,w||0,u||0,z||0,A||1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={set:function(b,d,e,f,g,h,j,i,k,n,o,t,w,u,z,A){this.n11=b;this.n12=d;this.n13=e;this.n14=f;this.n21=g;this.n22=h;this.n23=j;this.n24=i;this.n31=k;this.n32=n;this.n33=o;this.n34=t;this.n41=w;this.n42=u;this.n43=z;this.n44=A;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.set(b.n11,b.n12,b.n13,b.n14,b.n21,b.n22,b.n23,b.n24,b.n31,b.n32,b.n33,b.n34,b.n41,b.n42,b.n43,b.n44);return this},lookAt:function(b,d,e){var f=THREE.Matrix4.__v1,
g=THREE.Matrix4.__v2,h=THREE.Matrix4.__v3;h.sub(b,d).normalize();if(h.length()===0)h.z=1;f.cross(e,h).normalize();f.length()===0&&(h.x+=1.0E-4,f.cross(e,h).normalize());g.cross(h,f).normalize();this.n11=f.x;this.n12=g.x;this.n13=h.x;this.n21=f.y;this.n22=g.y;this.n23=h.y;this.n31=f.z;this.n32=g.z;this.n33=h.z;return this},multiplyVector3:function(b){var d=b.x,e=b.y,f=b.z,g=1/(this.n41*d+this.n42*e+this.n43*f+this.n44);b.x=(this.n11*d+this.n12*e+this.n13*f+this.n14)*g;b.y=(this.n21*d+this.n22*e+this.n23*
f+this.n24)*g;b.z=(this.n31*d+this.n32*e+this.n33*f+this.n34)*g;return b},multiplyVector4:function(b){var d=b.x,e=b.y,f=b.z,g=b.w;b.x=this.n11*d+this.n12*e+this.n13*f+this.n14*g;b.y=this.n21*d+this.n22*e+this.n23*f+this.n24*g;b.z=this.n31*d+this.n32*e+this.n33*f+this.n34*g;b.w=this.n41*d+this.n42*e+this.n43*f+this.n44*g;return b},rotateAxis:function(b){var d=b.x,e=b.y,f=b.z;b.x=d*this.n11+e*this.n12+f*this.n13;b.y=d*this.n21+e*this.n22+f*this.n23;b.z=d*this.n31+e*this.n32+f*this.n33;b.normalize();
return b},crossVector:function(b){var d=new THREE.Vector4;d.x=this.n11*b.x+this.n12*b.y+this.n13*b.z+this.n14*b.w;d.y=this.n21*b.x+this.n22*b.y+this.n23*b.z+this.n24*b.w;d.z=this.n31*b.x+this.n32*b.y+this.n33*b.z+this.n34*b.w;d.w=b.w?this.n41*b.x+this.n42*b.y+this.n43*b.z+this.n44*b.w:1;return d},multiply:function(b,d){var e=b.n11,f=b.n12,g=b.n13,h=b.n14,j=b.n21,i=b.n22,k=b.n23,n=b.n24,o=b.n31,t=b.n32,w=b.n33,u=b.n34,z=b.n41,A=b.n42,D=b.n43,C=b.n44,ea=d.n11,oa=d.n12,ka=d.n13,L=d.n14,B=d.n21,I=d.n22,
aa=d.n23,E=d.n24,$=d.n31,O=d.n32,P=d.n33,pa=d.n34,S=d.n41,ca=d.n42,c=d.n43,ya=d.n44;this.n11=e*ea+f*B+g*$+h*S;this.n12=e*oa+f*I+g*O+h*ca;this.n13=e*ka+f*aa+g*P+h*c;this.n14=e*L+f*E+g*pa+h*ya;this.n21=j*ea+i*B+k*$+n*S;this.n22=j*oa+i*I+k*O+n*ca;this.n23=j*ka+i*aa+k*P+n*c;this.n24=j*L+i*E+k*pa+n*ya;this.n31=o*ea+t*B+w*$+u*S;this.n32=o*oa+t*I+w*O+u*ca;this.n33=o*ka+t*aa+w*P+u*c;this.n34=o*L+t*E+w*pa+u*ya;this.n41=z*ea+A*B+D*$+C*S;this.n42=z*oa+A*I+D*O+C*ca;this.n43=z*ka+A*aa+D*P+C*c;this.n44=z*L+A*E+
D*pa+C*ya;return this},multiplyToArray:function(b,d,e){this.multiply(b,d);e[0]=this.n11;e[1]=this.n21;e[2]=this.n31;e[3]=this.n41;e[4]=this.n12;e[5]=this.n22;e[6]=this.n32;e[7]=this.n42;e[8]=this.n13;e[9]=this.n23;e[10]=this.n33;e[11]=this.n43;e[12]=this.n14;e[13]=this.n24;e[14]=this.n34;e[15]=this.n44;return this},multiplySelf:function(b){this.multiply(this,b);return this},multiplyScalar:function(b){this.n11*=b;this.n12*=b;this.n13*=b;this.n14*=b;this.n21*=b;this.n22*=b;this.n23*=b;this.n24*=b;this.n31*=
b;this.n32*=b;this.n33*=b;this.n34*=b;this.n41*=b;this.n42*=b;this.n43*=b;this.n44*=b;return this},determinant:function(){var b=this.n11,d=this.n12,e=this.n13,f=this.n14,g=this.n21,h=this.n22,j=this.n23,i=this.n24,k=this.n31,n=this.n32,o=this.n33,t=this.n34,w=this.n41,u=this.n42,z=this.n43,A=this.n44;return f*j*n*w-e*i*n*w-f*h*o*w+d*i*o*w+e*h*t*w-d*j*t*w-f*j*k*u+e*i*k*u+f*g*o*u-b*i*o*u-e*g*t*u+b*j*t*u+f*h*k*z-d*i*k*z-f*g*n*z+b*i*n*z+d*g*t*z-b*h*t*z-e*h*k*A+d*j*k*A+e*g*n*A-b*j*n*A-d*g*o*A+b*h*o*A},
transpose:function(){var b;b=this.n21;this.n21=this.n12;this.n12=b;b=this.n31;this.n31=this.n13;this.n13=b;b=this.n32;this.n32=this.n23;this.n23=b;b=this.n41;this.n41=this.n14;this.n14=b;b=this.n42;this.n42=this.n24;this.n24=b;b=this.n43;this.n43=this.n34;this.n43=b;return this},clone:function(){var b=new THREE.Matrix4;b.n11=this.n11;b.n12=this.n12;b.n13=this.n13;b.n14=this.n14;b.n21=this.n21;b.n22=this.n22;b.n23=this.n23;b.n24=this.n24;b.n31=this.n31;b.n32=this.n32;b.n33=this.n33;b.n34=this.n34;
b.n41=this.n41;b.n42=this.n42;b.n43=this.n43;b.n44=this.n44;return b},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(b){b[0]=this.n11;
b[1]=this.n21;b[2]=this.n31;b[3]=this.n41;b[4]=this.n12;b[5]=this.n22;b[6]=this.n32;b[7]=this.n42;b[8]=this.n13;b[9]=this.n23;b[10]=this.n33;b[11]=this.n43;b[12]=this.n14;b[13]=this.n24;b[14]=this.n34;b[15]=this.n44;return b},flattenToArrayOffset:function(b,d){b[d]=this.n11;b[d+1]=this.n21;b[d+2]=this.n31;b[d+3]=this.n41;b[d+4]=this.n12;b[d+5]=this.n22;b[d+6]=this.n32;b[d+7]=this.n42;b[d+8]=this.n13;b[d+9]=this.n23;b[d+10]=this.n33;b[d+11]=this.n43;b[d+12]=this.n14;b[d+13]=this.n24;b[d+14]=this.n34;
b[d+15]=this.n44;return b},setTranslation:function(b,d,e){this.set(1,0,0,b,0,1,0,d,0,0,1,e,0,0,0,1);return this},setScale:function(b,d,e){this.set(b,0,0,0,0,d,0,0,0,0,e,0,0,0,0,1);return this},setRotationX:function(b){var d=Math.cos(b),b=Math.sin(b);this.set(1,0,0,0,0,d,-b,0,0,b,d,0,0,0,0,1);return this},setRotationY:function(b){var d=Math.cos(b),b=Math.sin(b);this.set(d,0,b,0,0,1,0,0,-b,0,d,0,0,0,0,1);return this},setRotationZ:function(b){var d=Math.cos(b),b=Math.sin(b);this.set(d,-b,0,0,b,d,0,0,
0,0,1,0,0,0,0,1);return this},setRotationAxis:function(b,d){var e=Math.cos(d),f=Math.sin(d),g=1-e,h=b.x,j=b.y,i=b.z,k=g*h,n=g*j;this.set(k*h+e,k*j-f*i,k*i+f*j,0,k*j+f*i,n*j+e,n*i-f*h,0,k*i-f*j,n*i+f*h,g*i*i+e,0,0,0,0,1);return this},setPosition:function(b){this.n14=b.x;this.n24=b.y;this.n34=b.z;return this},getPosition:function(){if(!this.position)this.position=new THREE.Vector3;this.position.set(this.n14,this.n24,this.n34);return this.position},getColumnX:function(){if(!this.columnX)this.columnX=
new THREE.Vector3;this.columnX.set(this.n11,this.n21,this.n31);return this.columnX},getColumnY:function(){if(!this.columnY)this.columnY=new THREE.Vector3;this.columnY.set(this.n12,this.n22,this.n32);return this.columnY},getColumnZ:function(){if(!this.columnZ)this.columnZ=new THREE.Vector3;this.columnZ.set(this.n13,this.n23,this.n33);return this.columnZ},setRotationFromEuler:function(b,d){var e=b.x,f=b.y,g=b.z,h=Math.cos(e),e=Math.sin(e),j=Math.cos(f),f=Math.sin(f),i=Math.cos(g),g=Math.sin(g);switch(d){case "YXZ":var k=
j*i,n=j*g,o=f*i,t=f*g;this.n11=k+t*e;this.n12=o*e-n;this.n13=h*f;this.n21=h*g;this.n22=h*i;this.n23=-e;this.n31=n*e-o;this.n32=t+k*e;this.n33=h*j;break;case "ZXY":k=j*i;n=j*g;o=f*i;t=f*g;this.n11=k-t*e;this.n12=-h*g;this.n13=o+n*e;this.n21=n+o*e;this.n22=h*i;this.n23=t-k*e;this.n31=-h*f;this.n32=e;this.n33=h*j;break;case "ZYX":k=h*i;n=h*g;o=e*i;t=e*g;this.n11=j*i;this.n12=o*f-n;this.n13=k*f+t;this.n21=j*g;this.n22=t*f+k;this.n23=n*f-o;this.n31=-f;this.n32=e*j;this.n33=h*j;break;case "YZX":k=h*j;n=
h*f;o=e*j;t=e*f;this.n11=j*i;this.n12=t-k*g;this.n13=o*g+n;this.n21=g;this.n22=h*i;this.n23=-e*i;this.n31=-f*i;this.n32=n*g+o;this.n33=k-t*g;break;case "XZY":k=h*j;n=h*f;o=e*j;t=e*f;this.n11=j*i;this.n12=-g;this.n13=f*i;this.n21=k*g+t;this.n22=h*i;this.n23=n*g-o;this.n31=o*g-n;this.n32=e*i;this.n33=t*g+k;break;default:k=h*i,n=h*g,o=e*i,t=e*g,this.n11=j*i,this.n12=-j*g,this.n13=f,this.n21=n+o*f,this.n22=k-t*f,this.n23=-e*j,this.n31=t-k*f,this.n32=o+n*f,this.n33=h*j}return this},setRotationFromQuaternion:function(b){var d=
b.x,e=b.y,f=b.z,g=b.w,h=d+d,j=e+e,i=f+f,b=d*h,k=d*j;d*=i;var n=e*j;e*=i;f*=i;h*=g;j*=g;g*=i;this.n11=1-(n+f);this.n12=k-g;this.n13=d+j;this.n21=k+g;this.n22=1-(b+f);this.n23=e-h;this.n31=d-j;this.n32=e+h;this.n33=1-(b+n);return this},scale:function(b){var d=b.x,e=b.y,b=b.z;this.n11*=d;this.n12*=e;this.n13*=b;this.n21*=d;this.n22*=e;this.n23*=b;this.n31*=d;this.n32*=e;this.n33*=b;this.n41*=d;this.n42*=e;this.n43*=b;return this},extractPosition:function(b){this.n14=b.n14;this.n24=b.n24;this.n34=b.n34},
extractRotation:function(b,d){var e=1/d.x,f=1/d.y,g=1/d.z;this.n11=b.n11*e;this.n21=b.n21*e;this.n31=b.n31*e;this.n12=b.n12*f;this.n22=b.n22*f;this.n32=b.n32*f;this.n13=b.n13*g;this.n23=b.n23*g;this.n33=b.n33*g}};
THREE.Matrix4.makeInvert=function(b,d){var e=b.n11,f=b.n12,g=b.n13,h=b.n14,j=b.n21,i=b.n22,k=b.n23,n=b.n24,o=b.n31,t=b.n32,w=b.n33,u=b.n34,z=b.n41,A=b.n42,D=b.n43,C=b.n44;d===void 0&&(d=new THREE.Matrix4);d.n11=k*u*A-n*w*A+n*t*D-i*u*D-k*t*C+i*w*C;d.n12=h*w*A-g*u*A-h*t*D+f*u*D+g*t*C-f*w*C;d.n13=g*n*A-h*k*A+h*i*D-f*n*D-g*i*C+f*k*C;d.n14=h*k*t-g*n*t-h*i*w+f*n*w+g*i*u-f*k*u;d.n21=n*w*z-k*u*z-n*o*D+j*u*D+k*o*C-j*w*C;d.n22=g*u*z-h*w*z+h*o*D-e*u*D-g*o*C+e*w*C;d.n23=h*k*z-g*n*z-h*j*D+e*n*D+g*j*C-e*k*C;d.n24=
g*n*o-h*k*o+h*j*w-e*n*w-g*j*u+e*k*u;d.n31=i*u*z-n*t*z+n*o*A-j*u*A-i*o*C+j*t*C;d.n32=h*t*z-f*u*z-h*o*A+e*u*A+f*o*C-e*t*C;d.n33=g*n*z-h*i*z+h*j*A-e*n*A-f*j*C+e*i*C;d.n34=h*i*o-f*n*o-h*j*t+e*n*t+f*j*u-e*i*u;d.n41=k*t*z-i*w*z-k*o*A+j*w*A+i*o*D-j*t*D;d.n42=f*w*z-g*t*z+g*o*A-e*w*A-f*o*D+e*t*D;d.n43=g*i*z-f*k*z-g*j*A+e*k*A+f*j*D-e*i*D;d.n44=f*k*o-g*i*o+g*j*t-e*k*t-f*j*w+e*i*w;d.multiplyScalar(1/b.determinant());return d};
THREE.Matrix4.makeInvert3x3=function(b){var d=b.m33,e=d.m,f=b.n33*b.n22-b.n32*b.n23,g=-b.n33*b.n21+b.n31*b.n23,h=b.n32*b.n21-b.n31*b.n22,j=-b.n33*b.n12+b.n32*b.n13,i=b.n33*b.n11-b.n31*b.n13,k=-b.n32*b.n11+b.n31*b.n12,n=b.n23*b.n12-b.n22*b.n13,o=-b.n23*b.n11+b.n21*b.n13,t=b.n22*b.n11-b.n21*b.n12,b=b.n11*f+b.n21*j+b.n31*n;b==0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");b=1/b;e[0]=b*f;e[1]=b*g;e[2]=b*h;e[3]=b*j;e[4]=b*i;e[5]=b*k;e[6]=b*n;e[7]=b*o;e[8]=b*t;return d};
THREE.Matrix4.makeFrustum=function(b,d,e,f,g,h){var j;j=new THREE.Matrix4;j.n11=2*g/(d-b);j.n12=0;j.n13=(d+b)/(d-b);j.n14=0;j.n21=0;j.n22=2*g/(f-e);j.n23=(f+e)/(f-e);j.n24=0;j.n31=0;j.n32=0;j.n33=-(h+g)/(h-g);j.n34=-2*h*g/(h-g);j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(b,d,e,f){var g,b=e*Math.tan(b*Math.PI/360);g=-b;return THREE.Matrix4.makeFrustum(g*d,b*d,g,b,e,f)};
THREE.Matrix4.makeOrtho=function(b,d,e,f,g,h){var j,i,k,n;j=new THREE.Matrix4;i=d-b;k=e-f;n=h-g;j.n11=2/i;j.n12=0;j.n13=0;j.n14=-((d+b)/i);j.n21=0;j.n22=2/k;j.n23=0;j.n24=-((e+f)/k);j.n31=0;j.n32=0;j.n33=-2/n;j.n34=-((h+g)/n);j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;
THREE.Object3D=function(){this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.eulerOrder="XYZ";this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.scaleWorld=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.matrix=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={translate:function(b,d){this.matrix.rotateAxis(d);this.position.addSelf(d.multiplyScalar(b))},translateX:function(b){this.translate(b,this._vector.set(1,0,0))},translateY:function(b){this.translate(b,this._vector.set(0,1,0))},translateZ:function(b){this.translate(b,this._vector.set(0,0,1))},lookAt:function(b){this.matrix.lookAt(b,this.position,this.up);this.rotation.setRotationFromMatrix(this.matrix)},addObject:function(b){if(this.children.indexOf(b)===-1)b.parent!==void 0&&
b.parent.removeObject(b),b.parent=this,this.children.push(b)},removeObject:function(b){var d=this.children.indexOf(b);if(d!==-1)b.parent=void 0,this.children.splice(d,1)},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,
Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateWorldMatrices:function(b){if(this.matrixWorldNeedsUpdate||b)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.scaleWorld.multiply(this.parent.scaleWorld,this.scale)):(this.matrixWorld.copy(this.matrix),this.scaleWorld.copy(this.scale)),this.matrixRotationWorld.extractRotation(this.matrixWorld,this.scaleWorld),this.matrixWorldNeedsUpdate=!1,b=!0;for(var d=0,e=this.children.length;d<e;d++){var f=
this.children[d];f.matrixAutoUpdate&&f.updateMatrix();f.updateWorldMatrices(b)}}};THREE.Quaternion=function(b,d,e,f){this.set(b||0,d||0,e||0,f!==void 0?f:1)};
THREE.Quaternion.prototype={set:function(b,d,e,f){this.x=b;this.y=d;this.z=e;this.w=f;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(b){var d=0.5*Math.PI/360,e=b.x*d,f=b.y*d,g=b.z*d,b=Math.cos(f),f=Math.sin(f),d=Math.cos(-g),g=Math.sin(-g),h=Math.cos(e),e=Math.sin(e),j=b*d,i=f*g;this.w=j*h-i*e;this.x=j*e+i*h;this.y=f*d*h+b*g*e;this.z=b*g*h-f*d*e;return this},setFromAxisAngle:function(b,d){var e=d/2,f=Math.sin(e);this.x=b.x*f;this.y=b.y*
f;this.z=b.z*f;this.w=Math.cos(e);return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);b==0?this.w=this.z=this.y=this.x=0:(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},
multiplySelf:function(b){var d=this.x,e=this.y,f=this.z,g=this.w,h=b.x,j=b.y,i=b.z,b=b.w;this.x=d*b+g*h+e*i-f*j;this.y=e*b+g*j+f*h-d*i;this.z=f*b+g*i+d*j-e*h;this.w=g*b-d*h-e*j-f*i;return this},multiply:function(b,d){this.x=b.x*d.w+b.y*d.z-b.z*d.y+b.w*d.x;this.y=-b.x*d.z+b.y*d.w+b.z*d.x+b.w*d.y;this.z=b.x*d.y-b.y*d.x+b.z*d.w+b.w*d.z;this.w=-b.x*d.x-b.y*d.y-b.z*d.z+b.w*d.w;return this},multiplyVector3:function(b,d){d||(d=b);var e=b.x,f=b.y,g=b.z,h=this.x,j=this.y,i=this.z,k=this.w,n=k*e+j*g-i*f,o=
k*f+i*e-h*g,t=k*g+h*f-j*e,e=-h*e-j*f-i*g;d.x=n*k+e*-h+o*-i-t*-j;d.y=o*k+e*-j+t*-h-n*-i;d.z=t*k+e*-i+n*-j-o*-h;return d}};
THREE.Quaternion.slerp=function(b,d,e,f){var g=b.w*d.w+b.x*d.x+b.y*d.y+b.z*d.z;if(Math.abs(g)>=1)return e.w=b.w,e.x=b.x,e.y=b.y,e.z=b.z,e;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(Math.abs(j)<0.0010)return e.w=0.5*(b.w+d.w),e.x=0.5*(b.x+d.x),e.y=0.5*(b.y+d.y),e.z=0.5*(b.z+d.z),e;g=Math.sin((1-f)*h)/j;f=Math.sin(f*h)/j;e.w=b.w*g+d.w*f;e.x=b.x*g+d.x*f;e.y=b.y*g+d.y*f;e.z=b.z*g+d.z*f;return e};THREE.Vertex=function(b){this.position=b||new THREE.Vector3};
THREE.Face3=function(b,d,e,f,g,h){this.a=b;this.b=d;this.c=e;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materials=h instanceof Array?h:[h];this.centroid=new THREE.Vector3};
THREE.Face4=function(b,d,e,f,g,h,j){this.a=b;this.b=d;this.c=e;this.d=f;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materials=j instanceof Array?j:[j];this.centroid=new THREE.Vector3};THREE.UV=function(b,d){this.set(b||0,d||0)};
THREE.UV.prototype={set:function(b,d){this.u=b;this.v=d;return this},copy:function(b){this.set(b.u,b.v);return this}};THREE.Geometry=function(){this.id=THREE.GeometryIdCounter++;console.log(this,this.id);this.vertices=[];this.colors=[];this.faces=[];this.edges=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1};
THREE.Geometry.prototype={computeCentroids:function(){var b,d,e;b=0;for(d=this.faces.length;b<d;b++)e=this.faces[b],e.centroid.set(0,0,0),e instanceof THREE.Face3?(e.centroid.addSelf(this.vertices[e.a].position),e.centroid.addSelf(this.vertices[e.b].position),e.centroid.addSelf(this.vertices[e.c].position),e.centroid.divideScalar(3)):e instanceof THREE.Face4&&(e.centroid.addSelf(this.vertices[e.a].position),e.centroid.addSelf(this.vertices[e.b].position),e.centroid.addSelf(this.vertices[e.c].position),
e.centroid.addSelf(this.vertices[e.d].position),e.centroid.divideScalar(4))},computeFaceNormals:function(b){var d,e,f,g,h,j,i=new THREE.Vector3,k=new THREE.Vector3;f=0;for(g=this.faces.length;f<g;f++){h=this.faces[f];if(b&&h.vertexNormals.length){i.set(0,0,0);d=0;for(e=h.vertexNormals.length;d<e;d++)i.addSelf(h.vertexNormals[d]);i.divideScalar(3)}else d=this.vertices[h.a],e=this.vertices[h.b],j=this.vertices[h.c],i.sub(j.position,e.position),k.sub(d.position,e.position),i.crossSelf(k);i.isZero()||
i.normalize();h.normal.copy(i)}},computeVertexNormals:function(){var b,d,e,f;if(this.__tmpVertices==void 0){f=this.__tmpVertices=Array(this.vertices.length);b=0;for(d=this.vertices.length;b<d;b++)f[b]=new THREE.Vector3;b=0;for(d=this.faces.length;b<d;b++)if(e=this.faces[b],e instanceof THREE.Face3)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(e instanceof THREE.Face4)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{f=
this.__tmpVertices;b=0;for(d=this.vertices.length;b<d;b++)f[b].set(0,0,0)}b=0;for(d=this.faces.length;b<d;b++)e=this.faces[b],e instanceof THREE.Face3?(f[e.a].addSelf(e.normal),f[e.b].addSelf(e.normal),f[e.c].addSelf(e.normal)):e instanceof THREE.Face4&&(f[e.a].addSelf(e.normal),f[e.b].addSelf(e.normal),f[e.c].addSelf(e.normal),f[e.d].addSelf(e.normal));b=0;for(d=this.vertices.length;b<d;b++)f[b].normalize();b=0;for(d=this.faces.length;b<d;b++)e=this.faces[b],e instanceof THREE.Face3?(e.vertexNormals[0].copy(f[e.a]),
e.vertexNormals[1].copy(f[e.b]),e.vertexNormals[2].copy(f[e.c])):e instanceof THREE.Face4&&(e.vertexNormals[0].copy(f[e.a]),e.vertexNormals[1].copy(f[e.b]),e.vertexNormals[2].copy(f[e.c]),e.vertexNormals[3].copy(f[e.d]))},computeTangents:function(){function b(b,c,d,e,f,h,g){i=b.vertices[c].position;k=b.vertices[d].position;n=b.vertices[e].position;o=j[f];t=j[h];w=j[g];u=k.x-i.x;z=n.x-i.x;A=k.y-i.y;D=n.y-i.y;C=k.z-i.z;ea=n.z-i.z;oa=t.u-o.u;ka=w.u-o.u;L=t.v-o.v;B=w.v-o.v;I=1/(oa*B-ka*L);O.set((B*u-
L*z)*I,(B*A-L*D)*I,(B*C-L*ea)*I);P.set((oa*z-ka*u)*I,(oa*D-ka*A)*I,(oa*ea-ka*C)*I);E[c].addSelf(O);E[d].addSelf(O);E[e].addSelf(O);$[c].addSelf(P);$[d].addSelf(P);$[e].addSelf(P)}var d,e,f,g,h,j,i,k,n,o,t,w,u,z,A,D,C,ea,oa,ka,L,B,I,aa,E=[],$=[],O=new THREE.Vector3,P=new THREE.Vector3,pa=new THREE.Vector3,S=new THREE.Vector3,ca=new THREE.Vector3;d=0;for(e=this.vertices.length;d<e;d++)E[d]=new THREE.Vector3,$[d]=new THREE.Vector3;d=0;for(e=this.faces.length;d<e;d++)h=this.faces[d],j=this.faceVertexUvs[0][d],
h instanceof THREE.Face3?b(this,h.a,h.b,h.c,0,1,2):h instanceof THREE.Face4&&(b(this,h.a,h.b,h.c,0,1,2),b(this,h.a,h.b,h.d,0,1,3));var c=["a","b","c","d"];d=0;for(e=this.faces.length;d<e;d++){h=this.faces[d];for(f=0;f<h.vertexNormals.length;f++)ca.copy(h.vertexNormals[f]),g=h[c[f]],aa=E[g],pa.copy(aa),pa.subSelf(ca.multiplyScalar(ca.dot(aa))).normalize(),S.cross(h.vertexNormals[f],aa),g=S.dot($[g]),g=g<0?-1:1,h.vertexTangents[f]=new THREE.Vector4(pa.x,pa.y,pa.z,g)}this.hasTangents=!0},computeBoundingBox:function(){var b;
if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var d=1,e=this.vertices.length;d<e;d++){b=this.vertices[d];if(b.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=b.position.x;else if(b.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=b.position.x;if(b.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=b.position.y;
else if(b.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=b.position.y;if(b.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=b.position.z;else if(b.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=b.position.z}}},computeBoundingSphere:function(){for(var b=0,d=0,e=this.vertices.length;d<e;d++)b=Math.max(b,this.vertices[d].position.length());this.boundingSphere={radius:b}},computeEdgeFaces:function(){function b(b,d){return Math.min(b,d)+"_"+Math.max(b,d)}function d(b,d,e){b[d]===
void 0?(b[d]={set:{},array:[]},b[d].set[e]=1,b[d].array.push(e)):b[d].set[e]===void 0&&(b[d].set[e]=1,b[d].array.push(e))}var e,f,g,h,j,i={};e=0;for(f=this.faces.length;e<f;e++)j=this.faces[e],j instanceof THREE.Face3?(g=b(j.a,j.b),d(i,g,e),g=b(j.b,j.c),d(i,g,e),g=b(j.a,j.c),d(i,g,e)):j instanceof THREE.Face4&&(g=b(j.b,j.d),d(i,g,e),g=b(j.a,j.b),d(i,g,e),g=b(j.a,j.d),d(i,g,e),g=b(j.b,j.c),d(i,g,e),g=b(j.c,j.d),d(i,g,e));e=0;for(f=this.edges.length;e<f;e++){j=this.edges[e];g=j.vertexIndices[0];h=j.vertexIndices[1];
j.faceIndices=i[b(g,h)].array;for(g=0;g<j.faceIndices.length;g++)h=j.faceIndices[g],j.faces.push(this.faces[h])}}};THREE.GeometryIdCounter=0;
THREE.Spline=function(b){function d(b,d,e,f,h,g,j){b=(e-b)*0.5;f=(f-d)*0.5;return(2*(d-e)+b+f)*j+(-3*(d-e)-2*b-f)*g+b*h+d}this.points=b;var e=[],f={x:0,y:0,z:0},g,h,j,i,k,n,o,t,w;this.initFromArray=function(b){this.points=[];for(var d=0;d<b.length;d++)this.points[d]={x:b[d][0],y:b[d][1],z:b[d][2]}};this.getPoint=function(b){g=(this.points.length-1)*b;h=Math.floor(g);j=g-h;e[0]=h==0?h:h-1;e[1]=h;e[2]=h>this.points.length-2?h:h+1;e[3]=h>this.points.length-3?h:h+2;n=this.points[e[0]];o=this.points[e[1]];
t=this.points[e[2]];w=this.points[e[3]];i=j*j;k=j*i;f.x=d(n.x,o.x,t.x,w.x,j,i,k);f.y=d(n.y,o.y,t.y,w.y,j,i,k);f.z=d(n.z,o.z,t.z,w.z,j,i,k);return f};this.getControlPointsArray=function(){var b,d,e=this.points.length,f=[];for(b=0;b<e;b++)d=this.points[b],f[b]=[d.x,d.y,d.z];return f};this.getLength=function(b){var d,e,f=d=d=0,h=new THREE.Vector3,g=new THREE.Vector3,j=[],i=0;j[0]=0;b||(b=100);e=this.points.length*b;h.copy(this.points[0]);for(b=1;b<e;b++)d=b/e,position=this.getPoint(d),g.copy(position),
i+=g.distanceTo(h),h.copy(position),d*=this.points.length-1,d=Math.floor(d),d!=f&&(j[d]=i,f=d);j[j.length]=i;return{chunks:j,total:i}};this.reparametrizeByArcLength=function(b){var d,e,f,h,g,j,i=[],o=new THREE.Vector3,k=this.getLength();i.push(o.copy(this.points[0]).clone());for(d=1;d<this.points.length;d++){e=k.chunks[d]-k.chunks[d-1];j=Math.ceil(b*e/k.total);h=(d-1)/(this.points.length-1);g=d/(this.points.length-1);for(e=1;e<j-1;e++)f=h+e*(1/j)*(g-h),position=this.getPoint(f),i.push(o.copy(position).clone());
i.push(o.copy(this.points[d]).clone())}this.points=i}};THREE.Edge=function(b,d,e,f){this.vertices=[b,d];this.vertexIndices=[e,f];this.faces=[];this.faceIndices=[]};THREE.Camera=function(b,d,e,f,g){THREE.Object3D.call(this);this.fov=b||50;this.aspect=d||1;this.near=e||0.1;this.far=f||2E3;this.target=g||new THREE.Object3D;this.useTarget=!0;this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=null;this.updateProjectionMatrix()};THREE.Camera.prototype=new THREE.Object3D;
THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.supr=THREE.Object3D.prototype;THREE.Camera.prototype.translate=function(b,d){this.matrix.rotateAxis(d);d.multiplyScalar(b);this.position.addSelf(d);this.target.position.addSelf(d)};
THREE.Camera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var b=this.fullWidth/this.fullHeight,d=Math.tan(this.fov*Math.PI/360)*this.near,e=-d,f=b*e,b=Math.abs(b*d-f),e=Math.abs(d-e);this.projectionMatrix=THREE.Matrix4.makeFrustum(f+this.x*b/this.fullWidth,f+(this.x+this.width)*b/this.fullWidth,d-(this.y+this.height)*e/this.fullHeight,d-this.y*e/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Camera.prototype.setViewOffset=function(b,d,e,f,g,h){this.fullWidth=b;this.fullHeight=d;this.x=e;this.y=f;this.width=g;this.height=h;this.updateProjectionMatrix()};
THREE.Camera.prototype.update=function(b,d,e){if(this.useTarget)this.matrix.lookAt(this.position,this.target.position,this.up),this.matrix.setPosition(this.position),b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse),d=!0;else if(this.matrixAutoUpdate&&this.updateMatrix(),d||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,d=!0,THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse);for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,d,e)};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=new THREE.Light;
THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,d,e,f){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.intensity=d||1;this.distance=e||0;this.castShadow=f!==void 0?f:!1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(b,d,e){THREE.Light.call(this,b);this.position=new THREE.Vector3;this.intensity=d||1;this.distance=e||0};
THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.LensFlare=function(b,d,e,f){THREE.Object3D.call(this);this.positionScreen=new THREE.Vector3;this.lensFlares=[];this.customUpdateCallback=void 0;b!==void 0&&this.add(b,d,e,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;
THREE.LensFlare.prototype.add=function(b,d,e,f){d===void 0&&(d=-1);e===void 0&&(e=0);if(f===void 0)f=THREE.BillboardBlending;e=Math.min(e,Math.max(0,e));this.lensFlares.push({texture:b,size:d,distance:e,x:0,y:0,z:0,scale:1,rotation:1,opacity:1,blending:f})};
THREE.LensFlare.prototype.updateLensFlares=function(){var b,d=this.lensFlares.length,e,f=-this.positionScreen.x*2,g=-this.positionScreen.y*2;for(b=0;b<d;b++)e=this.lensFlares[b],e.x=this.positionScreen.x+f*e.distance,e.y=this.positionScreen.y+g*e.distance,e.wantedRotation=e.x*Math.PI*0.25,e.rotation+=(e.wantedRotation-e.rotation)*0.25};
THREE.Material=function(b){this.id=THREE.MaterialCounter.value++;b=b||{};this.opacity=b.opacity!==void 0?b.opacity:1;this.transparent=b.transparent!==void 0?b.transparent:!1;this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.depthTest=b.depthTest!==void 0?b.depthTest:!0;this.polygonOffset=b.polygonOffset!==void 0?b.polygonOffset:!1;this.polygonOffsetFactor=b.polygonOffsetFactor!==void 0?b.polygonOffsetFactor:0;this.polygonOffsetUnits=b.polygonOffsetUnits!==void 0?b.polygonOffsetUnits:
0};THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;THREE.MaterialCounter={value:0};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};
THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.LineBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.linewidth=b.linewidth!==void 0?b.linewidth:1;this.linecap=b.linecap!==void 0?b.linecap:"round";this.linejoin=b.linejoin!==void 0?b.linejoin:"round";this.vertexColors=b.vertexColors?b.vertexColors:!1};THREE.LineBasicMaterial.prototype=new THREE.Material;
THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.ambient=b.ambient!==void 0?new THREE.Color(b.ambient):new THREE.Color(328965);this.specular=b.specular!==void 0?new THREE.Color(b.specular):new THREE.Color(1118481);this.shininess=b.shininess!==void 0?b.shininess:30;this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;
this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==
void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading?b.shading:THREE.FlatShading;this.wireframe=b.wireframe?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth?b.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.fragmentShader=b.fragmentShader!==void 0?b.fragmentShader:"void main() {}";this.vertexShader=b.vertexShader!==void 0?b.vertexShader:"void main() {}";this.uniforms=b.uniforms!==void 0?b.uniforms:{};this.attributes=b.attributes;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.fog=
b.fog!==void 0?b.fog:!1;this.lights=b.lights!==void 0?b.lights:!1;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshShaderMaterial.prototype=new THREE.Material;THREE.MeshShaderMaterial.prototype.constructor=THREE.MeshShaderMaterial;
THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.size=b.size!==void 0?b.size:1;this.sizeAttenuation=b.sizeAttenuation!==void 0?b.sizeAttenuation:!0;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShadowVolumeDynamicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.ShadowVolumeDynamicMaterial.prototype=new THREE.Material;THREE.ShadowVolumeDynamicMaterial.prototype.constructor=THREE.ShadowVolumeDynamicMaterial;
THREE.Texture=function(b,d,e,f,g,h){this.image=b;this.mapping=d!==void 0?d:new THREE.UVMapping;this.wrapS=e!==void 0?e:THREE.ClampToEdgeWrapping;this.wrapT=f!==void 0?f:THREE.ClampToEdgeWrapping;this.magFilter=g!==void 0?g:THREE.LinearFilter;this.minFilter=h!==void 0?h:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter)}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;
THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.Particle=function(b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b]};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(b,d){THREE.Object3D.call(this);this.geometry=b;this.materials=d instanceof Array?d:[d];this.sortParticles=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(b,d,e){THREE.Object3D.call(this);this.geometry=b;this.materials=d instanceof Array?d:[d];this.type=e!=void 0?e:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(b,d){THREE.Object3D.call(this);this.geometry=b;this.materials=d&&d.length?d:[d];this.overdraw=!1;if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=b.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0;e<this.geometry.morphTargets.length;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=
e}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(this.morphTargetDictionary[b]!==void 0)return this.morphTargetDictionary[b];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};
THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4;this.hasNoneBoneChildren=!1};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(b,d,e){this.matrixAutoUpdate&&(d|=this.updateMatrix());if(d||this.matrixWorldNeedsUpdate)b?this.skinMatrix.multiply(b,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,d=!0;var f,g=this.children.length;if(this.hasNoneBoneChildren){this.matrixWorld.multiply(this.skin.matrixWorld,this.skinMatrix);for(f=0;f<g;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.skinMatrix,d,e):b.update(this.matrixWorld,!0,e)}else for(f=0;f<g;f++)this.children[f].update(this.skinMatrix,
d,e)};THREE.Bone.prototype.addChild=function(b){if(this.children.indexOf(b)===-1&&(b.parent!==void 0&&b.parent.removeChild(b),b.parent=this,this.children.push(b),!(b instanceof THREE.Bone)))this.hasNoneBoneChildren=!0};
THREE.SkinnedMesh=function(b,d){THREE.Mesh.call(this,b,d);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var e,f,g,h,j,i;if(this.geometry.bones!==void 0){for(e=0;e<this.geometry.bones.length;e++)g=this.geometry.bones[e],h=g.pos,j=g.rotq,i=g.scl,f=this.addBone(),f.name=g.name,f.position.set(h[0],h[1],h[2]),f.quaternion.set(j[0],j[1],j[2],j[3]),f.useQuaternion=!0,i!==void 0?f.scale.set(i[0],i[1],i[2]):f.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)g=this.geometry.bones[e],
f=this.bones[e],g.parent===-1?this.addChild(f):this.bones[g.parent].addChild(f);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.update=function(b,d,e){if(this.visible){this.matrixAutoUpdate&&(d|=this.updateMatrix());if(d||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,d=!0;var f,g=this.children.length;for(f=0;f<g;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.identityMatrix,!1,e):b.update(this.matrixWorld,d,e);e=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(d=0;d<e;d++)ba[d].skinMatrix.flattenToArrayOffset(bm,
d*16)}};THREE.SkinnedMesh.prototype.addBone=function(b){b===void 0&&(b=new THREE.Bone(this));this.bones.push(b);return b};
THREE.SkinnedMesh.prototype.pose=function(){this.update(void 0,!0);for(var b,d=[],e=0;e<this.bones.length;e++)b=this.bones[e],d.push(THREE.Matrix4.makeInvert(b.skinMatrix)),b.skinMatrix.flattenToArrayOffset(this.boneMatrices,e*16);if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];var f;for(b=0;b<this.geometry.skinIndices.length;b++){var e=this.geometry.vertices[b].position,g=this.geometry.skinIndices[b].x,h=this.geometry.skinIndices[b].y;f=new THREE.Vector3(e.x,
e.y,e.z);this.geometry.skinVerticesA.push(d[g].multiplyVector3(f));f=new THREE.Vector3(e.x,e.y,e.z);this.geometry.skinVerticesB.push(d[h].multiplyVector3(f));this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y!==1&&(e=(1-(this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y))*0.5,this.geometry.skinWeights[b].x+=e,this.geometry.skinWeights[b].y+=e)}}};THREE.Ribbon=function(b,d){THREE.Object3D.call(this);this.geometry=b;this.materials=d instanceof Array?d:[d]};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.add=function(b,d){d===void 0&&(d=0);for(var d=Math.abs(d),e=0;e<this.LODs.length;e++)if(d<this.LODs[e].visibleAtDistance)break;this.LODs.splice(e,0,{visibleAtDistance:d,object3D:b});this.addObject(b)};
THREE.LOD.prototype.update=function(b,d,e){this.matrixAutoUpdate&&(d|=this.updateMatrix());if(d||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,d=!0;if(this.LODs.length>1){b=e.matrixWorldInverse;b=-(b.n31*this.position.x+b.n32*this.position.y+b.n33*this.position.z+b.n34);this.LODs[0].object3D.visible=!0;for(var f=1;f<this.LODs.length;f++)if(b>=this.LODs[f].visibleAtDistance)this.LODs[f-1].object3D.visible=!1,
this.LODs[f].object3D.visible=!0;else break;for(;f<this.LODs.length;f++)this.LODs[f].object3D.visible=!1}for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,d,e)};THREE.ShadowVolume=function(b,d){b instanceof THREE.Mesh?(THREE.Mesh.call(this,b.geometry,d?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]),b.addObject(this)):THREE.Mesh.call(this,b,d?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]);this.calculateShadowVolumeGeometry()};
THREE.ShadowVolume.prototype=new THREE.Mesh;THREE.ShadowVolume.prototype.constructor=THREE.ShadowVolume;THREE.ShadowVolume.prototype.supr=THREE.Mesh.prototype;
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometry=function(){if(this.geometry.edges&&this.geometry.edges.length){var b,d,e,f,g,h,j,i,k,n,o,t,w,u,z=new THREE.Geometry;z.vertices=this.geometry.vertices;f=z.faces=this.geometry.faces;var A=z.egdes=this.geometry.edges,D=z.edgeFaces=[];g=0;var C=[];b=0;for(d=f.length;b<d;b++)if(e=f[b],C.push(g),g+=e instanceof THREE.Face3?3:4,e.vertexNormals[0]=e.normal,e.vertexNormals[1]=e.normal,e.vertexNormals[2]=e.normal,e instanceof THREE.Face4)e.vertexNormals[3]=
e.normal;b=0;for(d=A.length;b<d;b++)i=A[b],e=i.faces[0],f=i.faces[1],g=i.faceIndices[0],h=i.faceIndices[1],j=i.vertexIndices[0],i=i.vertexIndices[1],e.a===j?(k="a",o=C[g]+0):e.b===j?(k="b",o=C[g]+1):e.c===j?(k="c",o=C[g]+2):e.d===j&&(k="d",o=C[g]+3),e.a===i?(k+="a",t=C[g]+0):e.b===i?(k+="b",t=C[g]+1):e.c===i?(k+="c",t=C[g]+2):e.d===i&&(k+="d",t=C[g]+3),f.a===j?(n="a",w=C[h]+0):f.b===j?(n="b",w=C[h]+1):f.c===j?(n="c",w=C[h]+2):f.d===j&&(n="d",w=C[h]+3),f.a===i?(n+="a",u=C[h]+0):f.b===i?(n+="b",u=C[h]+
1):f.c===i?(n+="c",u=C[h]+2):f.d===i&&(n+="d",u=C[h]+3),k==="ac"||k==="ad"||k==="ca"||k==="da"?o>t&&(e=o,o=t,t=e):o<t&&(e=o,o=t,t=e),n==="ac"||n==="ad"||n==="ca"||n==="da"?w>u&&(e=w,w=u,u=e):w<u&&(e=w,w=u,u=e),e=new THREE.Face4(o,t,w,u),e.normal.set(1,0,0),D.push(e);this.geometry=z}else this.calculateShadowVolumeGeometryWithoutEdgeInfo(this.geometry)};
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometryWithoutEdgeInfo=function(b){this.geometry=new THREE.Geometry;this.geometry.boundingSphere=b.boundingSphere;this.geometry.edgeFaces=[];var d=this.geometry.vertices,e=this.geometry.faces,f=this.geometry.edgeFaces,g=b.faces,b=b.vertices,h=g.length,j,i,k,n,o,t=["a","b","c","d"];for(k=0;k<h;k++){i=d.length;j=g[k];j instanceof THREE.Face4?(n=4,i=new THREE.Face4(i,i+1,i+2,i+3)):(n=3,i=new THREE.Face3(i,i+1,i+2));i.normal.copy(j.normal);e.push(i);
for(i=0;i<n;i++)o=b[j[t[i]]],d.push(new THREE.Vertex(o.position.clone()))}for(h=0;h<g.length-1;h++){b=e[h];for(j=h+1;j<g.length;j++)i=e[j],i=this.facesShareEdge(d,b,i),i!==void 0&&(i=new THREE.Face4(i.indices[0],i.indices[3],i.indices[2],i.indices[1]),i.normal.set(1,0,0),f.push(i))}};
THREE.ShadowVolume.prototype.facesShareEdge=function(b,d,e){var f,g,h,j,i,k,n,o,t,w,u,z,A,D=0,C=["a","b","c","d"];f=d instanceof THREE.Face4?4:3;g=e instanceof THREE.Face4?4:3;for(z=0;z<f;z++){h=d[C[z]];i=b[h];for(A=0;A<g;A++)if(j=e[C[A]],k=b[j],Math.abs(i.position.x-k.position.x)<1.0E-4&&Math.abs(i.position.y-k.position.y)<1.0E-4&&Math.abs(i.position.z-k.position.z)<1.0E-4&&(D++,D===1&&(n=i,o=k,t=h,w=j,u=C[z]),D===2))return u+=C[z],u==="ad"||u==="ac"?{faces:[d,e],vertices:[n,o,k,i],indices:[t,w,
j,h],vertexTypes:[1,2,2,1],extrudable:!0}:{faces:[d,e],vertices:[n,i,k,o],indices:[t,h,j,w],vertexTypes:[1,1,2,2],extrudable:!0}}};
THREE.Sprite=function(b){THREE.Object3D.call(this);if(b.material!==void 0)this.material=b.material,this.map=void 0,this.blending=material.blending;else if(b.map!==void 0)this.map=b.map instanceof THREE.Texture?b.map:THREE.ImageUtils.loadTexture(b.map),this.material=void 0,this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.useScreenCoordinates=b.useScreenCoordinates!==void 0?b.useScreenCoordinates:!0;this.mergeWith3D=b.mergeWith3D!==void 0?b.mergeWith3D:!this.useScreenCoordinates;
this.affectedByDistance=b.affectedByDistance!==void 0?b.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=b.scaleByViewport!==void 0?b.scaleByViewport:!this.affectedByDistance;this.alignment=b.alignment instanceof THREE.Vector2?b.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.supr=THREE.Object3D.prototype;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){this.overrideMaterial=this.fog=this.ambientLight=null;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype.addObject=function(b){this.objects.indexOf(b)===-1&&(this.objects.push(b),this.__objectsAdded.push(b))};THREE.Scene.prototype.removeObject=function(b){var d=this.objects.indexOf(b);d!==-1&&(this.objects.splice(d,1),this.__objectsRemoved.push(b))};THREE.Scene.prototype.addLight=function(b){this.lights.indexOf(b)===-1&&this.lights.push(b)};
THREE.Scene.prototype.removeLight=function(b){b=this.lights.indexOf(b);b!==-1&&this.lights.splice(b,1)};THREE.Scene.prototype.update=function(){for(var b=0;b<this.objects.length;b++){var d=this.objects[b];d.matrixAutoUpdate&&d.updateMatrix();d.updateWorldMatrices(!1)}};THREE.Fog=function(b,d,e){this.color=new THREE.Color(b);this.near=d||1;this.far=e||1E3};THREE.FogExp2=function(b,d){this.color=new THREE.Color(b);this.density=d!==void 0?d:2.5E-4};
THREE.Projector=function(){function b(){var b=n[k]=n[k]||new THREE.RenderableVertex;k++;return b}function d(b,d){return d.z-b.z}function e(b){E[0].set(b.n41-b.n11,b.n42-b.n12,b.n43-b.n13,b.n44-b.n14);E[1].set(b.n41+b.n11,b.n42+b.n12,b.n43+b.n13,b.n44+b.n14);E[2].set(b.n41+b.n21,b.n42+b.n22,b.n43+b.n23,b.n44+b.n24);E[3].set(b.n41-b.n21,b.n42-b.n22,b.n43-b.n23,b.n44-b.n24);E[4].set(b.n41-b.n31,b.n42-b.n32,b.n43-b.n33,b.n44-b.n34);E[5].set(b.n41+b.n31,b.n42+b.n32,b.n43+b.n33,b.n44+b.n34);for(b=0;b<6;b++){var d=
E[b];d.divideScalar(Math.sqrt(d.x*d.x+d.y*d.y+d.z*d.z))}}function f(b,d){var e=0,f=1,c=b.z+b.w,h=d.z+d.w,g=-b.z+b.w,j=-d.z+d.w;return c>=0&&h>=0&&g>=0&&j>=0?!0:c<0&&h<0||g<0&&j<0?!1:(c<0?e=Math.max(e,c/(c-h)):h<0&&(f=Math.min(f,c/(c-h))),g<0?e=Math.max(e,g/(g-j)):j<0&&(f=Math.min(f,g/(g-j))),f<e?!1:(b.lerpSelf(d,e),d.lerpSelf(b,1-f),!0))}var g,h,j=[],i,k,n=[],o,t,w=[],u,z=[],A,D,C=[],ea,oa,ka=[],L=new THREE.Vector4,B=new THREE.Vector4,I=new THREE.Matrix4,aa=new THREE.Matrix4,E=[new THREE.Vector4,
new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],$=new THREE.Vector4,O=new THREE.Vector4;this.projectVector=function(b,d){I.multiply(d.projectionMatrix,d.matrixWorldInverse);I.multiplyVector3(b);return b};this.unprojectVector=function(b,d){I.multiply(d.matrixWorld,THREE.Matrix4.makeInvert(d.projectionMatrix));I.multiplyVector3(b);return b};this.getObjectsInFrustum=function(b,f,i){function o(b){if(b.visible){var c;if(!(c=!(b instanceof THREE.Mesh)))a:{for(var d=
b.matrixWorld,e=-b.geometry.boundingSphere.radius*Math.max(b.scaleWorld.x,Math.max(b.scaleWorld.y,b.scaleWorld.z)),f=0;f<6;f++)if(c=E[f].x*d.n14+E[f].y*d.n24+E[f].z*d.n34+E[f].w,c<=e){c=!1;break a}c=!0}if(c)c=j[h]=j[h]||new THREE.RenderableObject,h++,g=c,L.copy(b.position),I.multiplyVector3(L),g.object=b,g.z=L.z,k.push(g);c=0;for(d=b.children.length;c<d;c++)o(b.children[c])}}I.multiply(f.projectionMatrix,f.matrixWorldInverse);e(I);var c,k=[];h=0;c=b.objects;b=0;for(f=c.length;b<f;b++)o(c[b]);i&&k.sort(d);
return k};this.projectScene=function(e,h,g){var j=[],c=h.near,E=h.far,L,qa,K,ma,F,G,Q,ia,Ea,R,ra,sa,ta,ja,N,wa,na;oa=D=u=t=0;h.matrixAutoUpdate&&h.update(void 0,!0);Ea=this.getObjectsInFrustum(e,h,!0);e=0;for(L=Ea.length;e<L;e++)if(R=Ea[e].object,R.visible)if(ra=R.matrixWorld,sa=R.matrixRotationWorld,ta=R.materials,ja=R.overdraw,k=0,R instanceof THREE.Mesh){N=R.geometry;ma=N.vertices;wa=N.faces;N=N.faceVertexUvs;qa=0;for(K=ma.length;qa<K;qa++)i=b(),i.positionWorld.copy(ma[qa].position),ra.multiplyVector3(i.positionWorld),
i.positionScreen.copy(i.positionWorld),I.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.visible=i.positionScreen.z>c&&i.positionScreen.z<E;ma=0;for(qa=wa.length;ma<qa;ma++){K=wa[ma];if(K instanceof THREE.Face3)if(F=n[K.a],G=n[K.b],Q=n[K.c],F.visible&&G.visible&&Q.visible&&(R.doubleSided||R.flipSided!=(Q.positionScreen.x-F.positionScreen.x)*(G.positionScreen.y-F.positionScreen.y)-(Q.positionScreen.y-F.positionScreen.y)*(G.positionScreen.x-
F.positionScreen.x)<0))ia=w[t]=w[t]||new THREE.RenderableFace3,t++,o=ia,o.v1.copy(F),o.v2.copy(G),o.v3.copy(Q);else continue;else if(K instanceof THREE.Face4)if(F=n[K.a],G=n[K.b],Q=n[K.c],ia=n[K.d],F.visible&&G.visible&&Q.visible&&ia.visible&&(R.doubleSided||R.flipSided!=((ia.positionScreen.x-F.positionScreen.x)*(G.positionScreen.y-F.positionScreen.y)-(ia.positionScreen.y-F.positionScreen.y)*(G.positionScreen.x-F.positionScreen.x)<0||(G.positionScreen.x-Q.positionScreen.x)*(ia.positionScreen.y-Q.positionScreen.y)-
(G.positionScreen.y-Q.positionScreen.y)*(ia.positionScreen.x-Q.positionScreen.x)<0)))na=z[u]=z[u]||new THREE.RenderableFace4,u++,o=na,o.v1.copy(F),o.v2.copy(G),o.v3.copy(Q),o.v4.copy(ia);else continue;o.normalWorld.copy(K.normal);sa.multiplyVector3(o.normalWorld);o.centroidWorld.copy(K.centroid);ra.multiplyVector3(o.centroidWorld);o.centroidScreen.copy(o.centroidWorld);I.multiplyVector3(o.centroidScreen);Q=K.vertexNormals;F=0;for(G=Q.length;F<G;F++)ia=o.vertexNormalsWorld[F],ia.copy(Q[F]),sa.multiplyVector3(ia);
F=0;for(G=N.length;F<G;F++)if(na=N[F][ma]){Q=0;for(ia=na.length;Q<ia;Q++)o.uvs[F][Q]=na[Q]}o.meshMaterials=ta;o.faceMaterials=K.materials;o.overdraw=ja;o.z=o.centroidScreen.z;j.push(o)}}else if(R instanceof THREE.Line){aa.multiply(I,ra);ma=R.geometry.vertices;F=b();F.positionScreen.copy(ma[0].position);aa.multiplyVector4(F.positionScreen);qa=1;for(K=ma.length;qa<K;qa++)if(F=b(),F.positionScreen.copy(ma[qa].position),aa.multiplyVector4(F.positionScreen),G=n[k-2],$.copy(F.positionScreen),O.copy(G.positionScreen),
f($,O))$.multiplyScalar(1/$.w),O.multiplyScalar(1/O.w),ra=C[D]=C[D]||new THREE.RenderableLine,D++,A=ra,A.v1.positionScreen.copy($),A.v2.positionScreen.copy(O),A.z=Math.max($.z,O.z),A.materials=R.materials,j.push(A)}else if(R instanceof THREE.Particle&&(B.set(R.matrixWorld.n14,R.matrixWorld.n24,R.matrixWorld.n34,1),I.multiplyVector4(B),B.z/=B.w,B.z>0&&B.z<1))ra=ka[oa]=ka[oa]||new THREE.RenderableParticle,oa++,ea=ra,ea.x=B.x/B.w,ea.y=B.y/B.w,ea.z=B.z,ea.rotation=R.rotation.z,ea.scale.x=R.scale.x*Math.abs(ea.x-
(B.x+h.projectionMatrix.n11)/(B.w+h.projectionMatrix.n14)),ea.scale.y=R.scale.y*Math.abs(ea.y-(B.y+h.projectionMatrix.n22)/(B.w+h.projectionMatrix.n24)),ea.materials=R.materials,j.push(ea);g&&j.sort(d);return j}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef PHONG\nvPointLight[ i ] = vec4( lVector, lDistance );\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight * pointDistance;\npointSpecular += mSpecular * pointSpecularWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif"};THREE.UniformsUtils={merge:function(b){var d,e,f,g={};for(d=0;d<b.length;d++)for(e in f=this.clone(b[d]),f)g[e]=f[e];return g},clone:function(b){var d,e,f,g={};for(d in b)for(e in g[d]={},b[d])f=b[d][e],g[d][e]=f instanceof THREE.Color||f instanceof THREE.Vector3||f instanceof THREE.Texture?f.clone():f;return g}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",
value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * vVisibility;\ngl_FragColor = color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * visibility;\ngl_FragColor = color;\n}\n}"},
sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity;\ngl_FragColor = color;\n}"},shadowPost:{vertexShader:"uniform \tmat4 \tprojectionMatrix;\nattribute \tvec3 \tposition;\nvoid main() {\ngl_Position = projectionMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform \tfloat \tdarkness;\nvoid main() {\ngl_FragColor = vec4( 0, 0, 0, darkness );\n}"},
shadowVolumeDynamic:{uniforms:{directionalLightDirection:{type:"fv",value:[]}},vertexShader:"uniform \tvec3 \tdirectionalLightDirection;\nvoid main() {\nvec4 pos      = objectMatrix * vec4( position, 1.0 );\nvec3 norm     = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 extruded = vec4( directionalLightDirection * 5000.0 * step( 0.0, dot( directionalLightDirection, norm ) ), 0.0 );\ngl_Position   = projectionMatrix * viewMatrix * ( pos + extruded );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0 );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,
THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.lights_fragment,
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_vertex,
THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n"),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};
THREE.WebGLRenderer=function(b){function d(b,d,e){var f,h,g,j=b.vertices,i=j.length,o=b.colors,k=o.length,q=b.__vertexArray,M=b.__colorArray,n=b.__sortArray,t=b.__dirtyVertices,w=b.__dirtyColors,u=b.__webglCustomAttributes,T,p;if(u)for(T in u)u[T].offset=0;if(e.sortParticles){wa.multiplySelf(e.matrixWorld);for(f=0;f<i;f++)h=j[f].position,Fa.copy(h),wa.multiplyVector3(Fa),n[f]=[Fa.z,f];n.sort(function(b,c){return c[0]-b[0]});for(f=0;f<i;f++)h=j[n[f][1]].position,g=f*3,q[g]=h.x,q[g+1]=h.y,q[g+2]=h.z;
for(f=0;f<k;f++)g=f*3,color=o[n[f][1]],M[g]=color.r,M[g+1]=color.g,M[g+2]=color.b;if(u)for(T in u){f=u[T];o=f.value.length;for(g=0;g<o;g++){index=n[g][1];k=f.offset;if(f.size===1){if(f.boundTo===void 0||f.boundTo==="vertices")f.array[k]=f.value[index]}else{if(f.boundTo===void 0||f.boundTo==="vertices")p=f.value[index];f.size===2?(f.array[k]=p.x,f.array[k+1]=p.y):f.size===3?f.type==="c"?(f.array[k]=p.r,f.array[k+1]=p.g,f.array[k+2]=p.b):(f.array[k]=p.x,f.array[k+1]=p.y,f.array[k+2]=p.z):(f.array[k]=
p.x,f.array[k+1]=p.y,f.array[k+2]=p.z,f.array[k+3]=p.w)}f.offset+=f.size}}}else{if(t)for(f=0;f<i;f++)h=j[f].position,g=f*3,q[g]=h.x,q[g+1]=h.y,q[g+2]=h.z;if(w)for(f=0;f<k;f++)color=o[f],g=f*3,M[g]=color.r,M[g+1]=color.g,M[g+2]=color.b;if(u)for(T in u)if(f=u[T],f.__original.needsUpdate){o=f.value.length;for(g=0;g<o;g++){k=f.offset;if(f.size===1){if(f.boundTo===void 0||f.boundTo==="vertices")f.array[k]=f.value[g]}else{if(f.boundTo===void 0||f.boundTo==="vertices")p=f.value[g];f.size===2?(f.array[k]=
p.x,f.array[k+1]=p.y):f.size===3?f.type==="c"?(f.array[k]=p.r,f.array[k+1]=p.g,f.array[k+2]=p.b):(f.array[k]=p.x,f.array[k+1]=p.y,f.array[k+2]=p.z):(f.array[k]=p.x,f.array[k+1]=p.y,f.array[k+2]=p.z,f.array[k+3]=p.w)}f.offset+=f.size}}}if(t||e.sortParticles)c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,q,d);if(w||e.sortParticles)c.bindBuffer(c.ARRAY_BUFFER,b.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,M,d);if(u)for(T in u)if(f=u[T],f.__original.needsUpdate||e.sortParticles)c.bindBuffer(c.ARRAY_BUFFER,
f.buffer),c.bufferData(c.ARRAY_BUFFER,f.array,d)}function e(b,d,e,f,g){f.program||ca.initMaterial(f,d,e,g);var h=f.program,j=h.uniforms,i=f.uniforms;h!=za&&(c.useProgram(h),za=h);c.uniformMatrix4fv(j.projectionMatrix,!1,na);if(e&&(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial||f instanceof THREE.LineBasicMaterial||f instanceof THREE.ParticleBasicMaterial||f.fog))if(i.fogColor.value=e.color,e instanceof THREE.Fog)i.fogNear.value=
e.near,i.fogFar.value=e.far;else if(e instanceof THREE.FogExp2)i.fogDensity.value=e.density;if(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f.lights){var k,o,q=0,M=0,n=0,t,p,u,w,s=Ja,z=s.directional.colors,A=s.directional.positions,C=s.point.colors,H=s.point.positions,J=s.point.distances,v=0,r=0,e=o=w=0;for(k=d.length;e<k;e++)if(o=d[e],t=o.color,p=o.position,u=o.intensity,w=o.distance,o instanceof THREE.AmbientLight)q+=t.r,M+=t.g,n+=t.b;else if(o instanceof THREE.DirectionalLight)w=
v*3,z[w]=t.r*u,z[w+1]=t.g*u,z[w+2]=t.b*u,A[w]=p.x,A[w+1]=p.y,A[w+2]=p.z,v+=1;else if(o instanceof THREE.PointLight)o=r*3,C[o]=t.r*u,C[o+1]=t.g*u,C[o+2]=t.b*u,H[o]=p.x,H[o+1]=p.y,H[o+2]=p.z,J[r]=w,r+=1;for(e=v*3;e<z.length;e++)z[e]=0;for(e=r*3;e<C.length;e++)C[e]=0;s.point.length=r;s.directional.length=v;s.ambient[0]=q;s.ambient[1]=M;s.ambient[2]=n;e=Ja;i.enableLighting.value=e.directional.length+e.point.length;i.ambientLightColor.value=e.ambient;i.directionalLightColor.value=e.directional.colors;
i.directionalLightDirection.value=e.directional.positions;i.pointLightColor.value=e.point.colors;i.pointLightPosition.value=e.point.positions;i.pointLightDistance.value=e.point.distances}if(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)i.diffuse.value=f.color,i.opacity.value=f.opacity,(i.map.texture=f.map)&&i.offsetRepeat.value.set(f.map.offset.x,f.map.offset.y,f.map.repeat.x,f.map.repeat.y),i.lightMap.texture=f.lightMap,i.envMap.texture=
f.envMap,i.reflectivity.value=f.reflectivity,i.refractionRatio.value=f.refractionRatio,i.combine.value=f.combine,i.useRefract.value=f.envMap&&f.envMap.mapping instanceof THREE.CubeRefractionMapping;if(f instanceof THREE.LineBasicMaterial)i.diffuse.value=f.color,i.opacity.value=f.opacity;else if(f instanceof THREE.ParticleBasicMaterial)i.psColor.value=f.color,i.opacity.value=f.opacity,i.size.value=f.size,i.scale.value=ua.height/2,i.map.texture=f.map;else if(f instanceof THREE.MeshPhongMaterial)i.ambient.value=
f.ambient,i.specular.value=f.specular,i.shininess.value=f.shininess;else if(f instanceof THREE.MeshDepthMaterial)i.mNear.value=b.near,i.mFar.value=b.far,i.opacity.value=f.opacity;else if(f instanceof THREE.MeshNormalMaterial)i.opacity.value=f.opacity;for(var y in i)if(M=h.uniforms[y])if(k=i[y],q=k.type,e=k.value,q=="i")c.uniform1i(M,e);else if(q=="f")c.uniform1f(M,e);else if(q=="fv1")c.uniform1fv(M,e);else if(q=="fv")c.uniform3fv(M,e);else if(q=="v2")c.uniform2f(M,e.x,e.y);else if(q=="v3")c.uniform3f(M,
e.x,e.y,e.z);else if(q=="v4")c.uniform4f(M,e.x,e.y,e.z,e.w);else if(q=="c")c.uniform3f(M,e.r,e.g,e.b);else if(q=="t"&&(c.uniform1i(M,e),k=k.texture))if(k.image instanceof Array&&k.image.length==6){if(k.image.length==6){if(k.needsUpdate){if(k.__webglInit){c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webglTextureCube);for(q=0;q<6;++q)c.texSubImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,0,0,c.RGBA,c.UNSIGNED_BYTE,k.image[q])}else{k.image.__webglTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,
k.image.__webglTextureCube);for(q=0;q<6;++q)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image[q]);k.__webglInit=!0}E(c.TEXTURE_CUBE_MAP,k,k.image[0]);c.bindTexture(c.TEXTURE_CUBE_MAP,null);k.needsUpdate=!1}c.activeTexture(c.TEXTURE0+e);c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webglTextureCube)}}else $(k,e);c.uniformMatrix4fv(j.modelViewMatrix,!1,g._modelViewMatrixArray);c.uniformMatrix3fv(j.normalMatrix,!1,g._normalMatrixArray);(f instanceof THREE.MeshShaderMaterial||
f instanceof THREE.MeshPhongMaterial||f.envMap)&&j.cameraPosition!==null&&c.uniform3f(j.cameraPosition,b.position.x,b.position.y,b.position.z);(f instanceof THREE.MeshShaderMaterial||f.envMap||f.skinning)&&j.objectMatrix!==null&&c.uniformMatrix4fv(j.objectMatrix,!1,g._objectMatrixArray);(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshShaderMaterial||f.skinning)&&j.viewMatrix!==null&&c.uniformMatrix4fv(j.viewMatrix,!1,Ga);if(f instanceof THREE.ShadowVolumeDynamicMaterial)b=
i.directionalLightDirection.value,b[0]=-d[1].position.x,b[1]=-d[1].position.y,b[2]=-d[1].position.z,c.uniform3fv(j.directionalLightDirection,b),c.uniformMatrix4fv(j.objectMatrix,!1,g._objectMatrixArray),c.uniformMatrix4fv(j.viewMatrix,!1,Ga);f.skinning&&(c.uniformMatrix4fv(j.cameraInverseMatrix,!1,Ga),c.uniformMatrix4fv(j.boneGlobalMatrices,!1,g.boneMatrices));return h}function f(b,d,f,g,h,j){if(g.opacity!=0){var i,b=e(b,d,f,g,j).attributes;if(!g.morphTargets&&b.position>=0)c.bindBuffer(c.ARRAY_BUFFER,
h.__webglVertexBuffer),c.vertexAttribPointer(b.position,3,c.FLOAT,!1,0,0);else{d=g.program.attributes;j.morphTargetBase!==-1?(c.bindBuffer(c.ARRAY_BUFFER,h.__webglMorphTargetsBuffers[j.morphTargetBase]),c.vertexAttribPointer(d.position,3,c.FLOAT,!1,0,0)):d.position>=0&&(c.bindBuffer(c.ARRAY_BUFFER,h.__webglVertexBuffer),c.vertexAttribPointer(d.position,3,c.FLOAT,!1,0,0));if(j.morphTargetForcedOrder.length)for(var f=0,k=j.morphTargetForcedOrder,o=j.morphTargetInfluences;f<g.numSupportedMorphTargets&&
f<k.length;)c.bindBuffer(c.ARRAY_BUFFER,h.__webglMorphTargetsBuffers[k[f]]),c.vertexAttribPointer(d["morphTarget"+f],3,c.FLOAT,!1,0,0),j.__webglMorphTargetInfluences[f]=o[k[f]],f++;else{var k=[],n=-1,q=0,o=j.morphTargetInfluences,M,t=o.length,f=0;for(j.morphTargetBase!==-1&&(k[j.morphTargetBase]=!0);f<g.numSupportedMorphTargets;){for(M=0;M<t;M++)!k[M]&&o[M]>n&&(q=M,n=o[q]);c.bindBuffer(c.ARRAY_BUFFER,h.__webglMorphTargetsBuffers[q]);c.vertexAttribPointer(d["morphTarget"+f],3,c.FLOAT,!1,0,0);j.__webglMorphTargetInfluences[f]=
n;k[q]=1;n=-1;f++}}g.program.uniforms.morphTargetInfluences!==null&&c.uniform1fv(g.program.uniforms.morphTargetInfluences,j.__webglMorphTargetInfluences)}if(h.__webglCustomAttributes)for(i in h.__webglCustomAttributes)b[i]>=0&&(d=h.__webglCustomAttributes[i],c.bindBuffer(c.ARRAY_BUFFER,d.buffer),c.vertexAttribPointer(b[i],d.size,c.FLOAT,!1,0,0));b.color>=0&&(c.bindBuffer(c.ARRAY_BUFFER,h.__webglColorBuffer),c.vertexAttribPointer(b.color,3,c.FLOAT,!1,0,0));b.normal>=0&&(c.bindBuffer(c.ARRAY_BUFFER,
h.__webglNormalBuffer),c.vertexAttribPointer(b.normal,3,c.FLOAT,!1,0,0));b.tangent>=0&&(c.bindBuffer(c.ARRAY_BUFFER,h.__webglTangentBuffer),c.vertexAttribPointer(b.tangent,4,c.FLOAT,!1,0,0));b.uv>=0&&(h.__webglUVBuffer?(c.bindBuffer(c.ARRAY_BUFFER,h.__webglUVBuffer),c.vertexAttribPointer(b.uv,2,c.FLOAT,!1,0,0),c.enableVertexAttribArray(b.uv)):c.disableVertexAttribArray(b.uv));b.uv2>=0&&(h.__webglUV2Buffer?(c.bindBuffer(c.ARRAY_BUFFER,h.__webglUV2Buffer),c.vertexAttribPointer(b.uv2,2,c.FLOAT,!1,0,
0),c.enableVertexAttribArray(b.uv2)):c.disableVertexAttribArray(b.uv2));g.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(c.bindBuffer(c.ARRAY_BUFFER,h.__webglSkinVertexABuffer),c.vertexAttribPointer(b.skinVertexA,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,h.__webglSkinVertexBBuffer),c.vertexAttribPointer(b.skinVertexB,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,h.__webglSkinIndicesBuffer),c.vertexAttribPointer(b.skinIndex,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,
h.__webglSkinWeightsBuffer),c.vertexAttribPointer(b.skinWeight,4,c.FLOAT,!1,0,0));j instanceof THREE.Mesh?(g.wireframe?(c.lineWidth(g.wireframeLinewidth),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,h.__webglLineBuffer),c.drawElements(c.LINES,h.__webglLineCount,c.UNSIGNED_SHORT,0)):(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,h.__webglFaceBuffer),c.drawElements(c.TRIANGLES,h.__webglFaceCount,c.UNSIGNED_SHORT,0)),ca.data.vertices+=h.__webglFaceCount,ca.data.faces+=h.__webglFaceCount/3,ca.data.drawCalls++):j instanceof
THREE.Line?(j=j.type==THREE.LineStrip?c.LINE_STRIP:c.LINES,c.lineWidth(g.linewidth),c.drawArrays(j,0,h.__webglLineCount),ca.data.drawCalls++):j instanceof THREE.ParticleSystem?(c.drawArrays(c.POINTS,0,h.__webglParticleCount),ca.data.drawCalls++):j instanceof THREE.Ribbon&&(c.drawArrays(c.TRIANGLE_STRIP,0,h.__webglVertexCount),ca.data.drawCalls++)}}function g(b,d,e){if(!b.__webglVertexBuffer)b.__webglVertexBuffer=c.createBuffer();if(!b.__webglNormalBuffer)b.__webglNormalBuffer=c.createBuffer();b.hasPos&&
(c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,b.positionArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(d.attributes.position),c.vertexAttribPointer(d.attributes.position,3,c.FLOAT,!1,0,0));if(b.hasNormal){c.bindBuffer(c.ARRAY_BUFFER,b.__webglNormalBuffer);if(e==THREE.FlatShading){var f,h,g,j,i,k,o,q,M,n,t=b.count*3;for(n=0;n<t;n+=9)e=b.normalArray,f=e[n],h=e[n+1],g=e[n+2],j=e[n+3],k=e[n+4],q=e[n+5],i=e[n+6],o=e[n+7],M=e[n+8],f=(f+j+i)/3,h=(h+k+o)/3,g=(g+q+M)/3,e[n]=
f,e[n+1]=h,e[n+2]=g,e[n+3]=f,e[n+4]=h,e[n+5]=g,e[n+6]=f,e[n+7]=h,e[n+8]=g}c.bufferData(c.ARRAY_BUFFER,b.normalArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(d.attributes.normal);c.vertexAttribPointer(d.attributes.normal,3,c.FLOAT,!1,0,0)}c.drawArrays(c.TRIANGLES,0,b.count);b.count=0}function h(b){if(ma!=b.doubleSided)b.doubleSided?c.disable(c.CULL_FACE):c.enable(c.CULL_FACE),ma=b.doubleSided;if(F!=b.flipSided)b.flipSided?c.frontFace(c.CW):c.frontFace(c.CCW),F=b.flipSided}function j(b){Q!=b&&(b?c.enable(c.DEPTH_TEST):
c.disable(c.DEPTH_TEST),Q=b)}function i(b,d,e){ia!=b&&(b?c.enable(c.POLYGON_OFFSET_FILL):c.disable(c.POLYGON_OFFSET_FILL),ia=b);if(b&&(Ea!=d||R!=e))c.polygonOffset(d,e),Ea=d,R=e}function k(b){N[0].set(b.n41-b.n11,b.n42-b.n12,b.n43-b.n13,b.n44-b.n14);N[1].set(b.n41+b.n11,b.n42+b.n12,b.n43+b.n13,b.n44+b.n14);N[2].set(b.n41+b.n21,b.n42+b.n22,b.n43+b.n23,b.n44+b.n24);N[3].set(b.n41-b.n21,b.n42-b.n22,b.n43-b.n23,b.n44-b.n24);N[4].set(b.n41-b.n31,b.n42-b.n32,b.n43-b.n33,b.n44-b.n34);N[5].set(b.n41+b.n31,
b.n42+b.n32,b.n43+b.n33,b.n44+b.n34);for(var c,b=0;b<6;b++)c=N[b],c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))}function n(b){for(var c=b.matrixWorld,d=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),e=0;e<6;e++)if(b=N[e].x*c.n14+N[e].y*c.n24+N[e].z*c.n34+N[e].w,b<=d)return!1;return!0}function o(b,c){b.list[b.count]=c;b.count+=1}function t(b){var c,e,d=b.object,f=b.opaque,h=b.transparent;h.count=0;b=f.count=0;for(c=d.materials.length;b<c;b++)e=d.materials[b],
e.transparent?o(h,e):o(f,e)}function w(b){var c,e,d,f,h=b.object,g=b.buffer,j=b.opaque,i=b.transparent;i.count=0;b=j.count=0;for(d=h.materials.length;b<d;b++)if(c=h.materials[b],c instanceof THREE.MeshFaceMaterial){c=0;for(e=g.materials.length;c<e;c++)(f=g.materials[c])&&(f.transparent?o(i,f):o(j,f))}else(f=c)&&(f.transparent?o(i,f):o(j,f))}function u(b,c){return c.z-b.z}function z(b){c.enable(c.POLYGON_OFFSET_FILL);c.polygonOffset(0.1,1);c.enable(c.STENCIL_TEST);c.enable(c.DEPTH_TEST);c.depthMask(!1);
c.colorMask(!1,!1,!1,!1);c.stencilFunc(c.ALWAYS,1,255);c.stencilOpSeparate(c.BACK,c.KEEP,c.INCR,c.KEEP);c.stencilOpSeparate(c.FRONT,c.KEEP,c.DECR,c.KEEP);var e,d=b.lights.length,f,h=b.lights,g=[],j,i,k,o,q,n=b.__webglShadowVolumes.length;for(e=0;e<d;e++)if(f=b.lights[e],f instanceof THREE.DirectionalLight&&f.castShadow){g[0]=-f.position.x;g[1]=-f.position.y;g[2]=-f.position.z;for(q=0;q<n;q++)f=b.__webglShadowVolumes[q].object,j=b.__webglShadowVolumes[q].buffer,i=f.materials[0],i.program||ca.initMaterial(i,
h,void 0,f),i=i.program,k=i.uniforms,o=i.attributes,za!==i&&(c.useProgram(i),za=i,c.uniformMatrix4fv(k.projectionMatrix,!1,na),c.uniformMatrix4fv(k.viewMatrix,!1,Ga),c.uniform3fv(k.directionalLightDirection,g)),f.matrixWorld.flattenToArray(f._objectMatrixArray),c.uniformMatrix4fv(k.objectMatrix,!1,f._objectMatrixArray),c.bindBuffer(c.ARRAY_BUFFER,j.__webglVertexBuffer),c.vertexAttribPointer(o.position,3,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,j.__webglNormalBuffer),c.vertexAttribPointer(o.normal,
3,c.FLOAT,!1,0,0),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,j.__webglFaceBuffer),c.cullFace(c.FRONT),c.drawElements(c.TRIANGLES,j.__webglFaceCount,c.UNSIGNED_SHORT,0),c.cullFace(c.BACK),c.drawElements(c.TRIANGLES,j.__webglFaceCount,c.UNSIGNED_SHORT,0)}c.disable(c.POLYGON_OFFSET_FILL);c.colorMask(!0,!0,!0,!0);c.stencilFunc(c.NOTEQUAL,0,255);c.stencilOp(c.KEEP,c.KEEP,c.KEEP);c.disable(c.DEPTH_TEST);Q=G=-1;za=v.program;c.useProgram(v.program);c.uniformMatrix4fv(v.projectionLocation,!1,na);c.uniform1f(v.darknessLocation,
v.darkness);c.bindBuffer(c.ARRAY_BUFFER,v.vertexBuffer);c.vertexAttribPointer(v.vertexLocation,3,c.FLOAT,!1,0,0);c.enableVertexAttribArray(v.vertexLocation);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.blendEquation(c.FUNC_ADD);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,v.elementBuffer);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.disable(c.STENCIL_TEST);c.enable(c.DEPTH_TEST);c.depthMask(K)}function A(b,e){var d,f,h;d=s.attributes;var g=s.uniforms,j=ja/ta,i,k=[],o=ta*0.5,q=ja*0.5,n=!0;c.useProgram(s.program);
za=s.program;Q=G=-1;Ka||(c.enableVertexAttribArray(s.attributes.position),c.enableVertexAttribArray(s.attributes.uv),Ka=!0);c.disable(c.CULL_FACE);c.enable(c.BLEND);c.depthMask(!0);c.bindBuffer(c.ARRAY_BUFFER,s.vertexBuffer);c.vertexAttribPointer(d.position,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(d.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,s.elementBuffer);c.uniformMatrix4fv(g.projectionMatrix,!1,na);c.activeTexture(c.TEXTURE0);c.uniform1i(g.map,0);d=0;for(f=b.__webglSprites.length;d<
f;d++)h=b.__webglSprites[d],h.useScreenCoordinates?h.z=-h.position.z:(h._modelViewMatrix.multiplyToArray(e.matrixWorldInverse,h.matrixWorld,h._modelViewMatrixArray),h.z=-h._modelViewMatrix.n34);b.__webglSprites.sort(u);d=0;for(f=b.__webglSprites.length;d<f;d++)h=b.__webglSprites[d],h.material===void 0&&h.map&&h.map.image&&h.map.image.width&&(h.useScreenCoordinates?(c.uniform1i(g.useScreenCoordinates,1),c.uniform3f(g.screenPosition,(h.position.x-o)/o,(q-h.position.y)/q,Math.max(0,Math.min(1,h.position.z)))):
(c.uniform1i(g.useScreenCoordinates,0),c.uniform1i(g.affectedByDistance,h.affectedByDistance?1:0),c.uniformMatrix4fv(g.modelViewMatrix,!1,h._modelViewMatrixArray)),i=h.map.image.width/(h.scaleByViewport?ja:1),k[0]=i*j*h.scale.x,k[1]=i*h.scale.y,c.uniform2f(g.uvScale,h.uvScale.x,h.uvScale.y),c.uniform2f(g.uvOffset,h.uvOffset.x,h.uvOffset.y),c.uniform2f(g.alignment,h.alignment.x,h.alignment.y),c.uniform1f(g.opacity,h.opacity),c.uniform1f(g.rotation,h.rotation),c.uniform2fv(g.scale,k),h.mergeWith3D&&
!n?(c.enable(c.DEPTH_TEST),n=!0):!h.mergeWith3D&&n&&(c.disable(c.DEPTH_TEST),n=!1),aa(h.blending),$(h.map,0),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0));c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(K)}function D(b,d){var e,f,h=b.__webglLensFlares.length,g,j,i,k=new THREE.Vector3,o=ja/ta,q=ta*0.5,n=ja*0.5,t=16/ja,w=[t*o,t],u=[1,1,0],s=[1,1],T=p.uniforms;e=p.attributes;c.useProgram(p.program);za=p.program;Q=G=-1;La||(c.enableVertexAttribArray(p.attributes.vertex),c.enableVertexAttribArray(p.attributes.uv),
La=!0);c.uniform1i(T.occlusionMap,0);c.uniform1i(T.map,1);c.bindBuffer(c.ARRAY_BUFFER,p.vertexBuffer);c.vertexAttribPointer(e.vertex,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(e.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,p.elementBuffer);c.disable(c.CULL_FACE);c.depthMask(!1);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,p.occlusionTexture);c.activeTexture(c.TEXTURE1);for(f=0;f<h;f++)if(e=b.__webglLensFlares[f].object,k.set(e.matrixWorld.n14,e.matrixWorld.n24,e.matrixWorld.n34),
d.matrixWorldInverse.multiplyVector3(k),d.projectionMatrix.multiplyVector3(k),u[0]=k.x,u[1]=k.y,u[2]=k.z,s[0]=u[0]*q+q,s[1]=u[1]*n+n,p.hasVertexTexture||s[0]>0&&s[0]<ta&&s[1]>0&&s[1]<ja){c.bindTexture(c.TEXTURE_2D,p.tempTexture);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,s[0]-8,s[1]-8,16,16,0);c.uniform1i(T.renderType,0);c.uniform2fv(T.scale,w);c.uniform3fv(T.screenPosition,u);c.disable(c.BLEND);c.enable(c.DEPTH_TEST);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.bindTexture(c.TEXTURE_2D,p.occlusionTexture);
c.copyTexImage2D(c.TEXTURE_2D,0,c.RGBA,s[0]-8,s[1]-8,16,16,0);c.uniform1i(T.renderType,1);c.disable(c.DEPTH_TEST);c.bindTexture(c.TEXTURE_2D,p.tempTexture);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);e.positionScreen.x=u[0];e.positionScreen.y=u[1];e.positionScreen.z=u[2];e.customUpdateCallback?e.customUpdateCallback(e):e.updateLensFlares();c.uniform1i(T.renderType,2);c.enable(c.BLEND);g=0;for(j=e.lensFlares.length;g<j;g++)if(i=e.lensFlares[g],i.opacity>0.0010&&i.scale>0.0010)u[0]=i.x,u[1]=i.y,
u[2]=i.z,t=i.size*i.scale/ja,w[0]=t*o,w[1]=t,c.uniform3fv(T.screenPosition,u),c.uniform2fv(T.scale,w),c.uniform1f(T.rotation,i.rotation),c.uniform1f(T.opacity,i.opacity),aa(i.blending),$(i.texture,1),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0)}c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(K)}function C(b,c){b._modelViewMatrix.multiplyToArray(c.matrixWorldInverse,b.matrixWorld,b._modelViewMatrixArray);THREE.Matrix4.makeInvert3x3(b._modelViewMatrix).transposeIntoArray(b._normalMatrixArray)}
function ea(b){var c,e,d,f;f=b.__materials;b=0;for(e=f.length;b<e;b++)if(d=f[b],d.attributes)for(c in d.attributes)if(d.attributes[c].needsUpdate)return!0;return!1}function oa(b){var c,e,d,f;f=b.__materials;b=0;for(e=f.length;b<e;b++)if(d=f[b],d.attributes)for(c in d.attributes)d.attributes[c].needsUpdate=!1}function ka(b){var e,f,h,g;if(b instanceof THREE.Mesh){f=b.geometry;for(e in f.geometryGroups)if(h=f.geometryGroups[e],g=ea(h),f.__dirtyVertices||f.__dirtyMorphTargets||f.__dirtyElements||f.__dirtyUvs||
f.__dirtyNormals||f.__dirtyColors||f.__dirtyTangents||g){g=h;var j=b,i=c.DYNAMIC_DRAW;if(g.__inittedArrays){var k=void 0,o=void 0,n=void 0,q=void 0,t=n=void 0,u=void 0,w=void 0,p=void 0,s=void 0,T=void 0,z=void 0,A=void 0,C=void 0,v=void 0,H=void 0,J=void 0,D=void 0,r=q=p=q=w=u=void 0,y=void 0,m=y=r=u=void 0,F=void 0,I=m=y=r=n=n=t=p=q=m=y=r=F=m=y=r=F=m=y=r=void 0,B=0,E=0,Q=0,R=0,G=0,K=0,U=0,L=0,da=0,x=0,fa=0,y=r=0,ga=g.__vertexArray,$=g.__uvArray,aa=g.__uv2Array,P=g.__normalArray,V=g.__tangentArray,
ha=g.__colorArray,W=g.__skinVertexAArray,X=g.__skinVertexBArray,Y=g.__skinIndexArray,Z=g.__skinWeightArray,ca=g.__morphTargetsArrays,S=g.__webglCustomAttributes,m=void 0,N=g.__faceArray,O=g.__lineArray,ka=g.__needsSmoothNormals,T=g.__vertexColorType,s=g.__uvType,z=g.__normalType,la=j.geometry,ia=la.__dirtyVertices,ma=la.__dirtyElements,ja=la.__dirtyUvs,pa=la.__dirtyNormals,qa=la.__dirtyTangents,ra=la.__dirtyColors,ta=la.__dirtyMorphTargets,na=la.vertices,va=g.faces,ya=la.faces,wa=la.faceVertexUvs[0],
za=la.faceVertexUvs[1],sa=la.skinVerticesA,ua=la.skinVerticesB,Da=la.skinIndices,Ba=la.skinWeights,Ca=j instanceof THREE.ShadowVolume?la.edgeFaces:void 0,Aa=la.morphTargets;if(S)for(I in S)S[I].offset=0,S[I].offsetSrc=0;k=0;for(o=va.length;k<o;k++)if(n=va[k],q=ya[n],wa&&(A=wa[n]),za&&(C=za[n]),n=q.vertexNormals,t=q.normal,u=q.vertexColors,w=q.color,p=q.vertexTangents,q instanceof THREE.Face3){if(ia)v=na[q.a].position,H=na[q.b].position,J=na[q.c].position,ga[E]=v.x,ga[E+1]=v.y,ga[E+2]=v.z,ga[E+3]=
H.x,ga[E+4]=H.y,ga[E+5]=H.z,ga[E+6]=J.x,ga[E+7]=J.y,ga[E+8]=J.z,E+=9;if(S)for(I in S)if(m=S[I],m.__original.needsUpdate)r=m.offset,y=m.offsetSrc,m.size===1?(m.boundTo===void 0||m.boundTo==="vertices"?(m.array[r+0]=m.value[q.a],m.array[r+1]=m.value[q.b],m.array[r+2]=m.value[q.c]):m.boundTo==="faces"?(m.array[r+0]=m.value[y],m.array[r+1]=m.value[y],m.array[r+2]=m.value[y],m.offsetSrc++):m.boundTo==="faceVertices"&&(m.array[r+0]=m.value[y+0],m.array[r+1]=m.value[y+1],m.array[r+2]=m.value[y+2],m.offsetSrc+=
3),m.offset+=3):(m.boundTo===void 0||m.boundTo==="vertices"?(v=m.value[q.a],H=m.value[q.b],J=m.value[q.c]):m.boundTo==="faces"?(v=m.value[y],H=m.value[y],J=m.value[y],m.offsetSrc++):m.boundTo==="faceVertices"&&(v=m.value[y+0],H=m.value[y+1],J=m.value[y+2],m.offsetSrc+=3),m.size===2?(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=H.x,m.array[r+3]=H.y,m.array[r+4]=J.x,m.array[r+5]=J.y,m.offset+=6):m.size===3?(m.type==="c"?(m.array[r+0]=v.r,m.array[r+1]=v.g,m.array[r+2]=v.b,m.array[r+3]=H.r,m.array[r+
4]=H.g,m.array[r+5]=H.b,m.array[r+6]=J.r,m.array[r+7]=J.g,m.array[r+8]=J.b):(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=v.z,m.array[r+3]=H.x,m.array[r+4]=H.y,m.array[r+5]=H.z,m.array[r+6]=J.x,m.array[r+7]=J.y,m.array[r+8]=J.z),m.offset+=9):(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=v.z,m.array[r+3]=v.w,m.array[r+4]=H.x,m.array[r+5]=H.y,m.array[r+6]=H.z,m.array[r+7]=H.w,m.array[r+8]=J.x,m.array[r+9]=J.y,m.array[r+10]=J.z,m.array[r+11]=J.w,m.offset+=12));if(ta){r=0;for(y=Aa.length;r<y;r++)v=
Aa[r].vertices[q.a].position,H=Aa[r].vertices[q.b].position,J=Aa[r].vertices[q.c].position,m=ca[r],m[fa+0]=v.x,m[fa+1]=v.y,m[fa+2]=v.z,m[fa+3]=H.x,m[fa+4]=H.y,m[fa+5]=H.z,m[fa+6]=J.x,m[fa+7]=J.y,m[fa+8]=J.z;fa+=9}if(Ba.length)r=Ba[q.a],y=Ba[q.b],m=Ba[q.c],Z[x]=r.x,Z[x+1]=r.y,Z[x+2]=r.z,Z[x+3]=r.w,Z[x+4]=y.x,Z[x+5]=y.y,Z[x+6]=y.z,Z[x+7]=y.w,Z[x+8]=m.x,Z[x+9]=m.y,Z[x+10]=m.z,Z[x+11]=m.w,r=Da[q.a],y=Da[q.b],m=Da[q.c],Y[x]=r.x,Y[x+1]=r.y,Y[x+2]=r.z,Y[x+3]=r.w,Y[x+4]=y.x,Y[x+5]=y.y,Y[x+6]=y.z,Y[x+7]=y.w,
Y[x+8]=m.x,Y[x+9]=m.y,Y[x+10]=m.z,Y[x+11]=m.w,r=sa[q.a],y=sa[q.b],m=sa[q.c],W[x]=r.x,W[x+1]=r.y,W[x+2]=r.z,W[x+3]=1,W[x+4]=y.x,W[x+5]=y.y,W[x+6]=y.z,W[x+7]=1,W[x+8]=m.x,W[x+9]=m.y,W[x+10]=m.z,W[x+11]=1,r=ua[q.a],y=ua[q.b],m=ua[q.c],X[x]=r.x,X[x+1]=r.y,X[x+2]=r.z,X[x+3]=1,X[x+4]=y.x,X[x+5]=y.y,X[x+6]=y.z,X[x+7]=1,X[x+8]=m.x,X[x+9]=m.y,X[x+10]=m.z,X[x+11]=1,x+=12;if(ra&&T)u.length==3&&T==THREE.VertexColors?(q=u[0],r=u[1],y=u[2]):y=r=q=w,ha[da]=q.r,ha[da+1]=q.g,ha[da+2]=q.b,ha[da+3]=r.r,ha[da+4]=r.g,
ha[da+5]=r.b,ha[da+6]=y.r,ha[da+7]=y.g,ha[da+8]=y.b,da+=9;if(qa&&la.hasTangents)u=p[0],w=p[1],q=p[2],V[U]=u.x,V[U+1]=u.y,V[U+2]=u.z,V[U+3]=u.w,V[U+4]=w.x,V[U+5]=w.y,V[U+6]=w.z,V[U+7]=w.w,V[U+8]=q.x,V[U+9]=q.y,V[U+10]=q.z,V[U+11]=q.w,U+=12;if(pa&&z)if(n.length==3&&ka)for(p=0;p<3;p++)t=n[p],P[K]=t.x,P[K+1]=t.y,P[K+2]=t.z,K+=3;else for(p=0;p<3;p++)P[K]=t.x,P[K+1]=t.y,P[K+2]=t.z,K+=3;if(ja&&A!==void 0&&s)for(p=0;p<3;p++)n=A[p],$[Q]=n.u,$[Q+1]=n.v,Q+=2;if(ja&&C!==void 0&&s)for(p=0;p<3;p++)n=C[p],aa[R]=
n.u,aa[R+1]=n.v,R+=2;ma&&(N[G]=B,N[G+1]=B+1,N[G+2]=B+2,G+=3,O[L]=B,O[L+1]=B+1,O[L+2]=B,O[L+3]=B+2,O[L+4]=B+1,O[L+5]=B+2,L+=6,B+=3)}else if(q instanceof THREE.Face4){if(ia)v=na[q.a].position,H=na[q.b].position,J=na[q.c].position,D=na[q.d].position,ga[E]=v.x,ga[E+1]=v.y,ga[E+2]=v.z,ga[E+3]=H.x,ga[E+4]=H.y,ga[E+5]=H.z,ga[E+6]=J.x,ga[E+7]=J.y,ga[E+8]=J.z,ga[E+9]=D.x,ga[E+10]=D.y,ga[E+11]=D.z,E+=12;if(S)for(I in S)if(m=S[I],m.__original.needsUpdate)r=m.offset,y=m.offsetSrc,m.size===1?(m.boundTo===void 0||
m.boundTo==="vertices"?(m.array[r+0]=m.value[q.a],m.array[r+1]=m.value[q.b],m.array[r+2]=m.value[q.c],m.array[r+3]=m.value[q.d]):m.boundTo==="faces"?(m.array[r+0]=m.value[y],m.array[r+1]=m.value[y],m.array[r+2]=m.value[y],m.array[r+3]=m.value[y],m.offsetSrc++):m.boundTo==="faceVertices"&&(m.array[r+0]=m.value[y+0],m.array[r+1]=m.value[y+1],m.array[r+2]=m.value[y+2],m.array[r+3]=m.value[y+3],m.offsetSrc+=4),m.offset+=4):(m.boundTo===void 0||m.boundTo==="vertices"?(v=m.value[q.a],H=m.value[q.b],J=m.value[q.c],
D=m.value[q.d]):m.boundTo==="faces"?(v=m.value[y],H=m.value[y],J=m.value[y],D=m.value[y],m.offsetSrc++):m.boundTo==="faceVertices"&&(v=m.value[y+0],H=m.value[y+1],J=m.value[y+2],D=m.value[y+3],m.offsetSrc+=4),m.size===2?(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=H.x,m.array[r+3]=H.y,m.array[r+4]=J.x,m.array[r+5]=J.y,m.array[r+6]=D.x,m.array[r+7]=D.y,m.offset+=8):m.size===3?(m.type==="c"?(m.array[r+0]=v.r,m.array[r+1]=v.g,m.array[r+2]=v.b,m.array[r+3]=H.r,m.array[r+4]=H.g,m.array[r+5]=H.b,m.array[r+
6]=J.r,m.array[r+7]=J.g,m.array[r+8]=J.b,m.array[r+9]=D.r,m.array[r+10]=D.g,m.array[r+11]=D.b):(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=v.z,m.array[r+3]=H.x,m.array[r+4]=H.y,m.array[r+5]=H.z,m.array[r+6]=J.x,m.array[r+7]=J.y,m.array[r+8]=J.z,m.array[r+9]=D.x,m.array[r+10]=D.y,m.array[r+11]=D.z),m.offset+=12):(m.array[r+0]=v.x,m.array[r+1]=v.y,m.array[r+2]=v.z,m.array[r+3]=v.w,m.array[r+4]=H.x,m.array[r+5]=H.y,m.array[r+6]=H.z,m.array[r+7]=H.w,m.array[r+8]=J.x,m.array[r+9]=J.y,m.array[r+10]=
J.z,m.array[r+11]=J.w,m.array[r+12]=D.x,m.array[r+13]=D.y,m.array[r+14]=D.z,m.array[r+15]=D.w,m.offset+=16));if(ta){r=0;for(y=Aa.length;r<y;r++)v=Aa[r].vertices[q.a].position,H=Aa[r].vertices[q.b].position,J=Aa[r].vertices[q.c].position,D=Aa[r].vertices[q.d].position,m=ca[r],m[fa+0]=v.x,m[fa+1]=v.y,m[fa+2]=v.z,m[fa+3]=H.x,m[fa+4]=H.y,m[fa+5]=H.z,m[fa+6]=J.x,m[fa+7]=J.y,m[fa+8]=J.z,m[fa+9]=D.x,m[fa+10]=D.y,m[fa+11]=D.z;fa+=12}if(Ba.length)r=Ba[q.a],y=Ba[q.b],m=Ba[q.c],F=Ba[q.d],Z[x]=r.x,Z[x+1]=r.y,
Z[x+2]=r.z,Z[x+3]=r.w,Z[x+4]=y.x,Z[x+5]=y.y,Z[x+6]=y.z,Z[x+7]=y.w,Z[x+8]=m.x,Z[x+9]=m.y,Z[x+10]=m.z,Z[x+11]=m.w,Z[x+12]=F.x,Z[x+13]=F.y,Z[x+14]=F.z,Z[x+15]=F.w,r=Da[q.a],y=Da[q.b],m=Da[q.c],F=Da[q.d],Y[x]=r.x,Y[x+1]=r.y,Y[x+2]=r.z,Y[x+3]=r.w,Y[x+4]=y.x,Y[x+5]=y.y,Y[x+6]=y.z,Y[x+7]=y.w,Y[x+8]=m.x,Y[x+9]=m.y,Y[x+10]=m.z,Y[x+11]=m.w,Y[x+12]=F.x,Y[x+13]=F.y,Y[x+14]=F.z,Y[x+15]=F.w,r=sa[q.a],y=sa[q.b],m=sa[q.c],F=sa[q.d],W[x]=r.x,W[x+1]=r.y,W[x+2]=r.z,W[x+3]=1,W[x+4]=y.x,W[x+5]=y.y,W[x+6]=y.z,W[x+7]=1,
W[x+8]=m.x,W[x+9]=m.y,W[x+10]=m.z,W[x+11]=1,W[x+12]=F.x,W[x+13]=F.y,W[x+14]=F.z,W[x+15]=1,r=ua[q.a],y=ua[q.b],m=ua[q.c],q=ua[q.d],X[x]=r.x,X[x+1]=r.y,X[x+2]=r.z,X[x+3]=1,X[x+4]=y.x,X[x+5]=y.y,X[x+6]=y.z,X[x+7]=1,X[x+8]=m.x,X[x+9]=m.y,X[x+10]=m.z,X[x+11]=1,X[x+12]=q.x,X[x+13]=q.y,X[x+14]=q.z,X[x+15]=1,x+=16;if(ra&&T)u.length==4&&T==THREE.VertexColors?(q=u[0],r=u[1],y=u[2],u=u[3]):u=y=r=q=w,ha[da]=q.r,ha[da+1]=q.g,ha[da+2]=q.b,ha[da+3]=r.r,ha[da+4]=r.g,ha[da+5]=r.b,ha[da+6]=y.r,ha[da+7]=y.g,ha[da+8]=
y.b,ha[da+9]=u.r,ha[da+10]=u.g,ha[da+11]=u.b,da+=12;if(qa&&la.hasTangents)u=p[0],w=p[1],q=p[2],p=p[3],V[U]=u.x,V[U+1]=u.y,V[U+2]=u.z,V[U+3]=u.w,V[U+4]=w.x,V[U+5]=w.y,V[U+6]=w.z,V[U+7]=w.w,V[U+8]=q.x,V[U+9]=q.y,V[U+10]=q.z,V[U+11]=q.w,V[U+12]=p.x,V[U+13]=p.y,V[U+14]=p.z,V[U+15]=p.w,U+=16;if(pa&&z)if(n.length==4&&ka)for(p=0;p<4;p++)t=n[p],P[K]=t.x,P[K+1]=t.y,P[K+2]=t.z,K+=3;else for(p=0;p<4;p++)P[K]=t.x,P[K+1]=t.y,P[K+2]=t.z,K+=3;if(ja&&A!==void 0&&s)for(p=0;p<4;p++)n=A[p],$[Q]=n.u,$[Q+1]=n.v,Q+=2;
if(ja&&C!==void 0&&s)for(p=0;p<4;p++)n=C[p],aa[R]=n.u,aa[R+1]=n.v,R+=2;ma&&(N[G]=B,N[G+1]=B+1,N[G+2]=B+3,N[G+3]=B+1,N[G+4]=B+2,N[G+5]=B+3,G+=6,O[L]=B,O[L+1]=B+1,O[L+2]=B,O[L+3]=B+3,O[L+4]=B+1,O[L+5]=B+2,O[L+6]=B+2,O[L+7]=B+3,L+=8,B+=4)}if(Ca){k=0;for(o=Ca.length;k<o;k++)N[G]=Ca[k].a,N[G+1]=Ca[k].b,N[G+2]=Ca[k].c,N[G+3]=Ca[k].a,N[G+4]=Ca[k].c,N[G+5]=Ca[k].d,G+=6}ia&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,ga,i));if(S)for(I in S)m=S[I],m.__original.needsUpdate&&
(c.bindBuffer(c.ARRAY_BUFFER,m.buffer),c.bufferData(c.ARRAY_BUFFER,m.array,i));if(ta){r=0;for(y=Aa.length;r<y;r++)c.bindBuffer(c.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[r]),c.bufferData(c.ARRAY_BUFFER,ca[r],i)}ra&&da>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,ha,i));pa&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,P,i));qa&&la.hasTangents&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglTangentBuffer),c.bufferData(c.ARRAY_BUFFER,V,
i));ja&&Q>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUVBuffer),c.bufferData(c.ARRAY_BUFFER,$,i));ja&&R>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUV2Buffer),c.bufferData(c.ARRAY_BUFFER,aa,i));ma&&(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglFaceBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,N,i),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglLineBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,O,i));x>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinVertexABuffer),c.bufferData(c.ARRAY_BUFFER,W,i),c.bindBuffer(c.ARRAY_BUFFER,
g.__webglSkinVertexBBuffer),c.bufferData(c.ARRAY_BUFFER,X,i),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinIndicesBuffer),c.bufferData(c.ARRAY_BUFFER,Y,i),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinWeightsBuffer),c.bufferData(c.ARRAY_BUFFER,Z,i));j.dynamic||(delete g.__inittedArrays,delete g.__colorArray,delete g.__normalArray,delete g.__tangentArray,delete g.__uvArray,delete g.__uv2Array,delete g.__faceArray,delete g.__vertexArray,delete g.__lineArray,delete g.__skinVertexAArray,delete g.__skinVertexBArray,
delete g.__skinIndexArray,delete g.__skinWeightArray)}}f.__dirtyVertices=!1;f.__dirtyMorphTargets=!1;f.__dirtyElements=!1;f.__dirtyUvs=!1;f.__dirtyNormals=!1;f.__dirtyTangents=!1;f.__dirtyColors=!1;oa(h)}else if(b instanceof THREE.Ribbon){f=b.geometry;if(f.__dirtyVertices||f.__dirtyColors){b=f;e=c.DYNAMIC_DRAW;s=b.vertices;g=b.colors;T=s.length;j=g.length;z=b.__vertexArray;i=b.__colorArray;A=b.__dirtyColors;if(b.__dirtyVertices){for(k=0;k<T;k++)o=s[k].position,h=k*3,z[h]=o.x,z[h+1]=o.y,z[h+2]=o.z;
c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,z,e)}if(A){for(k=0;k<j;k++)color=g[k],h=k*3,i[h]=color.r,i[h+1]=color.g,i[h+2]=color.b;c.bindBuffer(c.ARRAY_BUFFER,b.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,i,e)}}f.__dirtyVertices=!1;f.__dirtyColors=!1}else if(b instanceof THREE.Line){f=b.geometry;if(f.__dirtyVertices||f.__dirtyColors){b=f;e=c.DYNAMIC_DRAW;s=b.vertices;g=b.colors;T=s.length;j=g.length;z=b.__vertexArray;i=b.__colorArray;A=b.__dirtyColors;if(b.__dirtyVertices){for(k=
0;k<T;k++)o=s[k].position,h=k*3,z[h]=o.x,z[h+1]=o.y,z[h+2]=o.z;c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,z,e)}if(A){for(k=0;k<j;k++)color=g[k],h=k*3,i[h]=color.r,i[h+1]=color.g,i[h+2]=color.b;c.bindBuffer(c.ARRAY_BUFFER,b.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,i,e)}}f.__dirtyVertices=!1;f.__dirtyColors=!1}else if(b instanceof THREE.ParticleSystem)f=b.geometry,g=ea(f),(f.__dirtyVertices||f.__dirtyColors||b.sortParticles||g)&&d(f,c.DYNAMIC_DRAW,b),f.__dirtyVertices=
!1,f.__dirtyColors=!1,oa(f)}function L(b,c){var e;for(e=b.length-1;e>=0;e--)b[e].object==c&&b.splice(e,1)}function B(b){function c(b){var f=[];e=0;for(d=b.length;e<d;e++)b[e]==void 0?f.push("undefined"):f.push(b[e].id);return f.join("_")}var e,d,f,g,h,j,i,k,q={},o=b.morphTargets!==void 0?b.morphTargets.length:0;b.geometryGroups={};f=0;for(g=b.faces.length;f<g;f++)h=b.faces[f],j=h.materials,i=c(j),q[i]==void 0&&(q[i]={hash:i,counter:0}),k=q[i].hash+"_"+q[i].counter,b.geometryGroups[k]==void 0&&(b.geometryGroups[k]=
{faces:[],materials:j,vertices:0,numMorphTargets:o}),h=h instanceof THREE.Face3?3:4,b.geometryGroups[k].vertices+h>65535&&(q[i].counter+=1,k=q[i].hash+"_"+q[i].counter,b.geometryGroups[k]==void 0&&(b.geometryGroups[k]={faces:[],materials:j,vertices:0,numMorphTargets:o})),b.geometryGroups[k].faces.push(f),b.geometryGroups[k].vertices+=h}function I(b,c,e){b.push({buffer:c,object:e,opaque:{list:[],count:0},transparent:{list:[],count:0}})}function aa(b){if(b!=G){switch(b){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);
c.blendFunc(c.SRC_ALPHA,c.ONE);break;case THREE.SubtractiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)}G=b}}function E(b,e,d){(d.width&d.width-1)==0&&(d.height&d.height-1)==0?(c.texParameteri(b,c.TEXTURE_WRAP_S,S(e.wrapS)),c.texParameteri(b,
c.TEXTURE_WRAP_T,S(e.wrapT)),c.texParameteri(b,c.TEXTURE_MAG_FILTER,S(e.magFilter)),c.texParameteri(b,c.TEXTURE_MIN_FILTER,S(e.minFilter)),c.generateMipmap(b)):(c.texParameteri(b,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(b,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(b,c.TEXTURE_MAG_FILTER,pa(e.magFilter)),c.texParameteri(b,c.TEXTURE_MIN_FILTER,pa(e.minFilter)))}function $(b,e){if(b.needsUpdate)b.__webglInit?(c.bindTexture(c.TEXTURE_2D,b.__webglTexture),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,
c.RGBA,c.UNSIGNED_BYTE,b.image)):(b.__webglTexture=c.createTexture(),c.bindTexture(c.TEXTURE_2D,b.__webglTexture),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,b.image),b.__webglInit=!0),E(c.TEXTURE_2D,b,b.image),c.bindTexture(c.TEXTURE_2D,null),b.needsUpdate=!1;c.activeTexture(c.TEXTURE0+e);c.bindTexture(c.TEXTURE_2D,b.__webglTexture)}function O(b){if(b&&!b.__webglFramebuffer){if(b.depthBuffer===void 0)b.depthBuffer=!0;if(b.stencilBuffer===void 0)b.stencilBuffer=!0;b.__webglFramebuffer=
c.createFramebuffer();b.__webglRenderbuffer=c.createRenderbuffer();b.__webglTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,b.__webglTexture);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,S(b.wrapS));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,S(b.wrapT));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,S(b.magFilter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,S(b.minFilter));c.texImage2D(c.TEXTURE_2D,0,S(b.format),b.width,b.height,0,S(b.format),S(b.type),null);c.bindRenderbuffer(c.RENDERBUFFER,
b.__webglRenderbuffer);c.bindFramebuffer(c.FRAMEBUFFER,b.__webglFramebuffer);c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,b.__webglTexture,0);b.depthBuffer&&!b.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,b.width,b.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,b.__webglRenderbuffer)):b.depthBuffer&&b.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,b.width,b.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,
c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,b.__webglRenderbuffer)):c.renderbufferStorage(c.RENDERBUFFER,c.RGBA4,b.width,b.height);c.bindTexture(c.TEXTURE_2D,null);c.bindRenderbuffer(c.RENDERBUFFER,null);c.bindFramebuffer(c.FRAMEBUFFER,null)}var e,d;b?(e=b.__webglFramebuffer,d=b.width,b=b.height):(e=null,d=ta,b=ja);e!=qa&&(c.bindFramebuffer(c.FRAMEBUFFER,e),c.viewport(ra,sa,d,b),qa=e)}function P(b,e){var d;b=="fragment"?d=c.createShader(c.FRAGMENT_SHADER):b=="vertex"&&(d=c.createShader(c.VERTEX_SHADER));
c.shaderSource(d,e);c.compileShader(d);if(!c.getShaderParameter(d,c.COMPILE_STATUS))return console.error(c.getShaderInfoLog(d)),console.error(e),null;return d}function pa(b){switch(b){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return c.NEAREST;default:return c.LINEAR}}function S(b){switch(b){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;
case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return c.BYTE;case THREE.UnsignedByteType:return c.UNSIGNED_BYTE;case THREE.ShortType:return c.SHORT;case THREE.UnsignedShortType:return c.UNSIGNED_SHORT;
case THREE.IntType:return c.INT;case THREE.UnsignedShortType:return c.UNSIGNED_INT;case THREE.FloatType:return c.FLOAT;case THREE.AlphaFormat:return c.ALPHA;case THREE.RGBFormat:return c.RGB;case THREE.RGBAFormat:return c.RGBA;case THREE.LuminanceFormat:return c.LUMINANCE;case THREE.LuminanceAlphaFormat:return c.LUMINANCE_ALPHA}return 0}var ca=this,c,ya=[],za=null,qa=null,K=!0,ma=null,F=null,G=null,Q=null,ia=null,Ea=null,R=null,ra=0,sa=0,ta=0,ja=0,N=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,
new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],wa=new THREE.Matrix4,na=new Float32Array(16),Ga=new Float32Array(16),Fa=new THREE.Vector4,Ja={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},b=b||{},ua=b.canvas!==void 0?b.canvas:document.createElement("canvas"),Ia=b.stencil!==void 0?b.stencil:!0,Na=b.antialias!==void 0?b.antialias:!1,va=b.clearColor!==void 0?new THREE.Color(b.clearColor):new THREE.Color(0),Ha=b.clearAlpha!==
void 0?b.clearAlpha:0;this.data={vertices:0,faces:0,drawCalls:0};this.maxMorphTargets=8;this.domElement=ua;this.sortObjects=this.autoClear=!0;try{if(!(c=ua.getContext("experimental-webgl",{antialias:Na,stencil:Ia})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+c.getParameter(c.VERSION)+" | "+c.getParameter(c.VENDOR)+" | "+c.getParameter(c.RENDERER)+" | "+c.getParameter(c.SHADING_LANGUAGE_VERSION))}catch(Oa){console.error(Oa)}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);
c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA);c.clearColor(va.r,va.g,va.b,Ha);this.context=c;var Ma=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;if(Ia){var v={};v.vertices=new Float32Array(12);v.faces=new Uint16Array(6);v.darkness=0.5;v.vertices[0]=-20;v.vertices[1]=-20;v.vertices[2]=-1;v.vertices[3]=20;v.vertices[4]=-20;v.vertices[5]=-1;v.vertices[6]=20;v.vertices[7]=
20;v.vertices[8]=-1;v.vertices[9]=-20;v.vertices[10]=20;v.vertices[11]=-1;v.faces[0]=0;v.faces[1]=1;v.faces[2]=2;v.faces[3]=0;v.faces[4]=2;v.faces[5]=3;v.vertexBuffer=c.createBuffer();v.elementBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,v.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,v.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,v.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,v.faces,c.STATIC_DRAW);v.program=c.createProgram();c.attachShader(v.program,P("fragment",THREE.ShaderLib.shadowPost.fragmentShader));
c.attachShader(v.program,P("vertex",THREE.ShaderLib.shadowPost.vertexShader));c.linkProgram(v.program);v.vertexLocation=c.getAttribLocation(v.program,"position");v.projectionLocation=c.getUniformLocation(v.program,"projectionMatrix");v.darknessLocation=c.getUniformLocation(v.program,"darkness")}var p={};p.vertices=new Float32Array(16);p.faces=new Uint16Array(6);b=0;p.vertices[b++]=-1;p.vertices[b++]=-1;p.vertices[b++]=0;p.vertices[b++]=0;p.vertices[b++]=1;p.vertices[b++]=-1;p.vertices[b++]=1;p.vertices[b++]=
0;p.vertices[b++]=1;p.vertices[b++]=1;p.vertices[b++]=1;p.vertices[b++]=1;p.vertices[b++]=-1;p.vertices[b++]=1;p.vertices[b++]=0;p.vertices[b++]=1;b=0;p.faces[b++]=0;p.faces[b++]=1;p.faces[b++]=2;p.faces[b++]=0;p.faces[b++]=2;p.faces[b++]=3;p.vertexBuffer=c.createBuffer();p.elementBuffer=c.createBuffer();p.tempTexture=c.createTexture();p.occlusionTexture=c.createTexture();c.bindBuffer(c.ARRAY_BUFFER,p.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,p.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
p.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,p.faces,c.STATIC_DRAW);c.bindTexture(c.TEXTURE_2D,p.tempTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,16,0,c.RGB,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.bindTexture(c.TEXTURE_2D,p.occlusionTexture);c.texImage2D(c.TEXTURE_2D,
0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(p.hasVertexTexture=!1,p.program=c.createProgram(),c.attachShader(p.program,P("fragment",THREE.ShaderLib.lensFlare.fragmentShader)),c.attachShader(p.program,
P("vertex",THREE.ShaderLib.lensFlare.vertexShader))):(p.hasVertexTexture=!0,p.program=c.createProgram(),c.attachShader(p.program,P("fragment",THREE.ShaderLib.lensFlareVertexTexture.fragmentShader)),c.attachShader(p.program,P("vertex",THREE.ShaderLib.lensFlareVertexTexture.vertexShader)));c.linkProgram(p.program);p.attributes={};p.uniforms={};p.attributes.vertex=c.getAttribLocation(p.program,"position");p.attributes.uv=c.getAttribLocation(p.program,"UV");p.uniforms.renderType=c.getUniformLocation(p.program,
"renderType");p.uniforms.map=c.getUniformLocation(p.program,"map");p.uniforms.occlusionMap=c.getUniformLocation(p.program,"occlusionMap");p.uniforms.opacity=c.getUniformLocation(p.program,"opacity");p.uniforms.scale=c.getUniformLocation(p.program,"scale");p.uniforms.rotation=c.getUniformLocation(p.program,"rotation");p.uniforms.screenPosition=c.getUniformLocation(p.program,"screenPosition");var La=!1,s={};s.vertices=new Float32Array(16);s.faces=new Uint16Array(6);b=0;s.vertices[b++]=-1;s.vertices[b++]=
-1;s.vertices[b++]=0;s.vertices[b++]=1;s.vertices[b++]=1;s.vertices[b++]=-1;s.vertices[b++]=1;s.vertices[b++]=1;s.vertices[b++]=1;s.vertices[b++]=1;s.vertices[b++]=1;s.vertices[b++]=0;s.vertices[b++]=-1;s.vertices[b++]=1;s.vertices[b++]=0;b=s.vertices[b++]=0;s.faces[b++]=0;s.faces[b++]=1;s.faces[b++]=2;s.faces[b++]=0;s.faces[b++]=2;s.faces[b++]=3;s.vertexBuffer=c.createBuffer();s.elementBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,s.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,s.vertices,c.STATIC_DRAW);
c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,s.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,s.faces,c.STATIC_DRAW);s.program=c.createProgram();c.attachShader(s.program,P("fragment",THREE.ShaderLib.sprite.fragmentShader));c.attachShader(s.program,P("vertex",THREE.ShaderLib.sprite.vertexShader));c.linkProgram(s.program);s.attributes={};s.uniforms={};s.attributes.position=c.getAttribLocation(s.program,"position");s.attributes.uv=c.getAttribLocation(s.program,"uv");s.uniforms.uvOffset=c.getUniformLocation(s.program,
"uvOffset");s.uniforms.uvScale=c.getUniformLocation(s.program,"uvScale");s.uniforms.rotation=c.getUniformLocation(s.program,"rotation");s.uniforms.scale=c.getUniformLocation(s.program,"scale");s.uniforms.alignment=c.getUniformLocation(s.program,"alignment");s.uniforms.map=c.getUniformLocation(s.program,"map");s.uniforms.opacity=c.getUniformLocation(s.program,"opacity");s.uniforms.useScreenCoordinates=c.getUniformLocation(s.program,"useScreenCoordinates");s.uniforms.affectedByDistance=c.getUniformLocation(s.program,
"affectedByDistance");s.uniforms.screenPosition=c.getUniformLocation(s.program,"screenPosition");s.uniforms.modelViewMatrix=c.getUniformLocation(s.program,"modelViewMatrix");s.uniforms.projectionMatrix=c.getUniformLocation(s.program,"projectionMatrix");var Ka=!1;this.setSize=function(b,c){ua.width=b;ua.height=c;this.setViewport(0,0,ua.width,ua.height)};this.setViewport=function(b,e,d,f){ra=b;sa=e;ta=d;ja=f;c.viewport(ra,sa,ta,ja)};this.setScissor=function(b,e,d,f){c.scissor(b,e,d,f)};this.enableScissorTest=
function(b){b?c.enable(c.SCISSOR_TEST):c.disable(c.SCISSOR_TEST)};this.enableDepthBufferWrite=function(b){K=b;c.depthMask(b)};this.setClearColorHex=function(b,e){va.setHex(b);Ha=e;c.clearColor(va.r,va.g,va.b,Ha)};this.setClearColor=function(b,e){va.copy(b);Ha=e;c.clearColor(va.r,va.g,va.b,Ha)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT|c.STENCIL_BUFFER_BIT)};this.setStencilShadowDarkness=function(b){v.darkness=b};this.getContext=function(){return c};this.initMaterial=function(b,
e,d,f){var h,g,i;b instanceof THREE.MeshDepthMaterial?i="depth":b instanceof THREE.ShadowVolumeDynamicMaterial?i="shadowVolumeDynamic":b instanceof THREE.MeshNormalMaterial?i="normal":b instanceof THREE.MeshBasicMaterial?i="basic":b instanceof THREE.MeshLambertMaterial?i="lambert":b instanceof THREE.MeshPhongMaterial?i="phong":b instanceof THREE.LineBasicMaterial?i="basic":b instanceof THREE.ParticleBasicMaterial&&(i="particle_basic");if(i){var j=THREE.ShaderLib[i];b.uniforms=THREE.UniformsUtils.clone(j.uniforms);
b.vertexShader=j.vertexShader;b.fragmentShader=j.fragmentShader}var k,o,q;k=q=j=0;for(o=e.length;k<o;k++)g=e[k],g instanceof THREE.DirectionalLight&&q++,g instanceof THREE.PointLight&&j++;j+q<=4?e=q:(e=Math.ceil(4*q/(j+q)),j=4-e);g={directional:e,point:j};q=50;if(f!==void 0&&f instanceof THREE.SkinnedMesh)q=f.bones.length;var n;a:{k=b.fragmentShader;o=b.vertexShader;var j=b.uniforms,e=b.attributes,d={map:!!b.map,envMap:!!b.envMap,lightMap:!!b.lightMap,vertexColors:b.vertexColors,fog:d,sizeAttenuation:b.sizeAttenuation,
skinning:b.skinning,morphTargets:b.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:g.directional,maxPointLights:g.point,maxBones:q},p;g=[];i?g.push(i):(g.push(k),g.push(o));for(p in d)g.push(p),g.push(d[p]);i=g.join();p=0;for(g=ya.length;p<g;p++)if(ya[p].code==i){n=ya[p].program;break a}p=c.createProgram();g=[Ma?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+d.maxDirLights,"#define MAX_POINT_LIGHTS "+d.maxPointLights,"#define MAX_BONES "+d.maxBones,d.map?"#define USE_MAP":"",
d.envMap?"#define USE_ENVMAP":"",d.lightMap?"#define USE_LIGHTMAP":"",d.vertexColors?"#define USE_COLOR":"",d.skinning?"#define USE_SKINNING":"",d.morphTargets?"#define USE_MORPHTARGETS":"",d.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
q=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+d.maxDirLights,"#define MAX_POINT_LIGHTS "+d.maxPointLights,d.fog?"#define USE_FOG":"",d.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",d.map?"#define USE_MAP":"",d.envMap?"#define USE_ENVMAP":"",d.lightMap?"#define USE_LIGHTMAP":"",d.vertexColors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");c.attachShader(p,P("fragment",q+k));c.attachShader(p,P("vertex",g+o));c.linkProgram(p);
c.getProgramParameter(p,c.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+c.getProgramParameter(p,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");p.uniforms={};p.attributes={};var t;k=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(t in j)k.push(t);t=k;j=0;for(k=t.length;j<k;j++)o=t[j],p.uniforms[o]=c.getUniformLocation(p,o);k=["position","normal",
"uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(t=0;t<d.maxMorphTargets;t++)k.push("morphTarget"+t);for(n in e)k.push(n);n=k;t=0;for(e=n.length;t<e;t++)d=n[t],p.attributes[d]=c.getAttribLocation(p,d);ya.push({program:p,code:i});n=p}b.program=n;n=b.program.attributes;n.position>=0&&c.enableVertexAttribArray(n.position);n.color>=0&&c.enableVertexAttribArray(n.color);n.normal>=0&&c.enableVertexAttribArray(n.normal);n.tangent>=0&&c.enableVertexAttribArray(n.tangent);
b.skinning&&n.skinVertexA>=0&&n.skinVertexB>=0&&n.skinIndex>=0&&n.skinWeight>=0&&(c.enableVertexAttribArray(n.skinVertexA),c.enableVertexAttribArray(n.skinVertexB),c.enableVertexAttribArray(n.skinIndex),c.enableVertexAttribArray(n.skinWeight));if(b.attributes)for(h in b.attributes)n[h]!==void 0&&n[h]>=0&&c.enableVertexAttribArray(n[h]);if(b.morphTargets){b.numSupportedMorphTargets=0;n.morphTarget0>=0&&(c.enableVertexAttribArray(n.morphTarget0),b.numSupportedMorphTargets++);n.morphTarget1>=0&&(c.enableVertexAttribArray(n.morphTarget1),
b.numSupportedMorphTargets++);n.morphTarget2>=0&&(c.enableVertexAttribArray(n.morphTarget2),b.numSupportedMorphTargets++);n.morphTarget3>=0&&(c.enableVertexAttribArray(n.morphTarget3),b.numSupportedMorphTargets++);n.morphTarget4>=0&&(c.enableVertexAttribArray(n.morphTarget4),b.numSupportedMorphTargets++);n.morphTarget5>=0&&(c.enableVertexAttribArray(n.morphTarget5),b.numSupportedMorphTargets++);n.morphTarget6>=0&&(c.enableVertexAttribArray(n.morphTarget6),b.numSupportedMorphTargets++);n.morphTarget7>=
0&&(c.enableVertexAttribArray(n.morphTarget7),b.numSupportedMorphTargets++);f.__webglMorphTargetInfluences=new Float32Array(this.maxMorphTargets);b=0;for(h=this.maxMorphTargets;b<h;b++)f.__webglMorphTargetInfluences[b]=0}};this.render=function(b,d,o,p){var s,v,xa,B,E,F,q,M,G=b.lights,I=b.fog;ca.data.vertices=0;ca.data.faces=0;ca.data.drawCalls=0;d.matrixAutoUpdate&&d.update(void 0,!0);b.update(void 0,!1,d);d.matrixWorldInverse.flattenToArray(Ga);d.projectionMatrix.flattenToArray(na);wa.multiply(d.projectionMatrix,
d.matrixWorldInverse);k(wa);this.initWebGLObjects(b);O(o);(this.autoClear||p)&&this.clear();E=b.__webglObjects.length;for(p=0;p<E;p++)if(s=b.__webglObjects[p],q=s.object,q.visible)if(!(q instanceof THREE.Mesh)||n(q)){if(q.matrixWorld.flattenToArray(q._objectMatrixArray),C(q,d),w(s),s.render=!0,this.sortObjects)s.object.renderDepth?s.z=s.object.renderDepth:(Fa.copy(q.position),wa.multiplyVector3(Fa),s.z=Fa.z)}else s.render=!1;else s.render=!1;this.sortObjects&&b.__webglObjects.sort(u);F=b.__webglObjectsImmediate.length;
for(p=0;p<F;p++)s=b.__webglObjectsImmediate[p],q=s.object,q.visible&&(q.matrixAutoUpdate&&q.matrixWorld.flattenToArray(q._objectMatrixArray),C(q,d),t(s));if(b.overrideMaterial){j(b.overrideMaterial.depthTest);aa(b.overrideMaterial.blending);for(p=0;p<E;p++)if(s=b.__webglObjects[p],s.render)q=s.object,M=s.buffer,h(q),f(d,G,I,b.overrideMaterial,M,q);for(p=0;p<F;p++)s=b.__webglObjectsImmediate[p],q=s.object,q.visible&&(h(q),v=e(d,G,I,b.overrideMaterial,q),q.render(function(c){g(c,v,b.overrideMaterial.shading)}))}else{aa(THREE.NormalBlending);
for(p=0;p<E;p++)if(s=b.__webglObjects[p],s.render){q=s.object;M=s.buffer;xa=s.opaque;h(q);for(s=0;s<xa.count;s++)B=xa.list[s],j(B.depthTest),i(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),f(d,G,I,B,M,q)}for(p=0;p<F;p++)if(s=b.__webglObjectsImmediate[p],q=s.object,q.visible){xa=s.opaque;h(q);for(s=0;s<xa.count;s++)B=xa.list[s],j(B.depthTest),i(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),v=e(d,G,I,B,q),q.render(function(b){g(b,v,B.shading)})}for(p=0;p<E;p++)if(s=b.__webglObjects[p],
s.render){q=s.object;M=s.buffer;xa=s.transparent;h(q);for(s=0;s<xa.count;s++)B=xa.list[s],aa(B.blending),j(B.depthTest),i(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),f(d,G,I,B,M,q)}for(p=0;p<F;p++)if(s=b.__webglObjectsImmediate[p],q=s.object,q.visible){xa=s.transparent;h(q);for(s=0;s<xa.count;s++)B=xa.list[s],aa(B.blending),j(B.depthTest),i(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),v=e(d,G,I,B,q),q.render(function(b){g(b,v,B.shading)})}}b.__webglSprites.length&&A(b,
d);Ia&&b.__webglShadowVolumes.length&&b.lights.length&&z(b);b.__webglLensFlares.length&&D(b,d);o&&o.minFilter!==THREE.NearestFilter&&o.minFilter!==THREE.LinearFilter&&(c.bindTexture(c.TEXTURE_2D,o.__webglTexture),c.generateMipmap(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,null))};this.initWebGLObjects=function(b){if(!b.__webglObjects)b.__webglObjects=[],b.__webglObjectsImmediate=[],b.__webglShadowVolumes=[],b.__webglLensFlares=[],b.__webglSprites=[];for(;b.__objectsAdded.length;){var d=b.__objectsAdded[0],
e=b,f=void 0,g=void 0,h=void 0;if(d._modelViewMatrix==void 0)d._modelViewMatrix=new THREE.Matrix4,d._normalMatrixArray=new Float32Array(9),d._modelViewMatrixArray=new Float32Array(16),d._objectMatrixArray=new Float32Array(16),d.matrixWorld.flattenToArray(d._objectMatrixArray);if(d instanceof THREE.Mesh)for(f in g=d.geometry,g.geometryGroups==void 0&&B(g),g.geometryGroups){h=g.geometryGroups[f];if(!h.__webglVertexBuffer){var i=h;i.__webglVertexBuffer=c.createBuffer();i.__webglNormalBuffer=c.createBuffer();
i.__webglTangentBuffer=c.createBuffer();i.__webglColorBuffer=c.createBuffer();i.__webglUVBuffer=c.createBuffer();i.__webglUV2Buffer=c.createBuffer();i.__webglSkinVertexABuffer=c.createBuffer();i.__webglSkinVertexBBuffer=c.createBuffer();i.__webglSkinIndicesBuffer=c.createBuffer();i.__webglSkinWeightsBuffer=c.createBuffer();i.__webglFaceBuffer=c.createBuffer();i.__webglLineBuffer=c.createBuffer();if(i.numMorphTargets){var j=void 0,k=void 0;i.__webglMorphTargetsBuffers=[];j=0;for(k=i.numMorphTargets;j<
k;j++)i.__webglMorphTargetsBuffers.push(c.createBuffer())}for(var i=h,j=d,n=void 0,o=void 0,p=void 0,t=p=void 0,s=void 0,u=void 0,w=u=k=0,v=p=o=void 0,z=v=o=n=void 0,p=void 0,t=j.geometry,s=t.faces,v=i.faces,n=0,o=v.length;n<o;n++)p=v[n],p=s[p],p instanceof THREE.Face3?(k+=3,u+=1,w+=3):p instanceof THREE.Face4&&(k+=4,u+=2,w+=4);for(var n=i,o=j,A=v=s=void 0,C=void 0,A=void 0,p=[],s=0,v=o.materials.length;s<v;s++)if(A=o.materials[s],A instanceof THREE.MeshFaceMaterial){A=0;for(l=n.materials.length;A<
l;A++)(C=n.materials[A])&&p.push(C)}else(C=A)&&p.push(C);n=p;i.__materials=n;a:{s=o=void 0;v=n.length;for(o=0;o<v;o++)if(s=n[o],s.map||s.lightMap||s instanceof THREE.MeshShaderMaterial){o=!0;break a}o=!1}a:{v=s=void 0;p=n.length;for(s=0;s<p;s++)if(v=n[s],!(v instanceof THREE.MeshBasicMaterial&&!v.envMap||v instanceof THREE.MeshDepthMaterial)){v=v&&v.shading!=void 0&&v.shading==THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;break a}v=!1}a:{p=s=void 0;A=n.length;for(s=0;s<A;s++)if(p=n[s],
p.vertexColors){p=p.vertexColors;break a}p=!1}i.__vertexArray=new Float32Array(k*3);if(v)i.__normalArray=new Float32Array(k*3);if(t.hasTangents)i.__tangentArray=new Float32Array(k*4);if(p)i.__colorArray=new Float32Array(k*3);if(o){if(t.faceUvs.length>0||t.faceVertexUvs.length>0)i.__uvArray=new Float32Array(k*2);if(t.faceUvs.length>1||t.faceVertexUvs.length>1)i.__uv2Array=new Float32Array(k*2)}if(j.geometry.skinWeights.length&&j.geometry.skinIndices.length)i.__skinVertexAArray=new Float32Array(k*4),
i.__skinVertexBArray=new Float32Array(k*4),i.__skinIndexArray=new Float32Array(k*4),i.__skinWeightArray=new Float32Array(k*4);i.__faceArray=new Uint16Array(u*3+(j.geometry.edgeFaces?j.geometry.edgeFaces.length*6:0));i.__lineArray=new Uint16Array(w*2);if(i.numMorphTargets){i.__morphTargetsArrays=[];t=0;for(s=i.numMorphTargets;t<s;t++)i.__morphTargetsArrays.push(new Float32Array(k*3))}i.__needsSmoothNormals=v==THREE.SmoothShading;i.__uvType=o;i.__vertexColorType=p;i.__normalType=v;i.__webglFaceCount=
u*3+(j.geometry.edgeFaces?j.geometry.edgeFaces.length*6:0);i.__webglLineCount=w*2;t=0;for(s=n.length;t<s;t++)if(o=n[t],o.attributes){if(i.__webglCustomAttributes===void 0)i.__webglCustomAttributes={};for(a in o.attributes){p=o.attributes[a];v={};for(z in p)v[z]=p[z];if(!v.__webglInitialized||v.createUniqueBuffers)v.__webglInitialized=!0,u=1,v.type==="v2"?u=2:v.type==="v3"?u=3:v.type==="v4"?u=4:v.type==="c"&&(u=3),v.size=u,v.array=new Float32Array(k*u),v.buffer=c.createBuffer(),v.buffer.belongsToAttribute=
a,p.needsUpdate=!0,v.__original=p;i.__webglCustomAttributes[a]=v}}i.__inittedArrays=!0;g.__dirtyVertices=!0;g.__dirtyMorphTargets=!0;g.__dirtyElements=!0;g.__dirtyUvs=!0;g.__dirtyNormals=!0;g.__dirtyTangents=!0;g.__dirtyColors=!0}d instanceof THREE.ShadowVolume?I(e.__webglShadowVolumes,h,d):I(e.__webglObjects,h,d)}else if(d instanceof THREE.LensFlare)I(e.__webglLensFlares,void 0,d);else if(d instanceof THREE.Ribbon){g=d.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=c.createBuffer(),
f.__webglColorBuffer=c.createBuffer(),f=g,h=f.vertices.length,f.__vertexArray=new Float32Array(h*3),f.__colorArray=new Float32Array(h*3),f.__webglVertexCount=h,g.__dirtyVertices=!0,g.__dirtyColors=!0;I(e.__webglObjects,g,d)}else if(d instanceof THREE.Line){g=d.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=c.createBuffer(),f.__webglColorBuffer=c.createBuffer(),f=g,h=f.vertices.length,f.__vertexArray=new Float32Array(h*3),f.__colorArray=new Float32Array(h*3),f.__webglLineCount=h,g.__dirtyVertices=
!0,g.__dirtyColors=!0;I(e.__webglObjects,g,d)}else if(d instanceof THREE.ParticleSystem){g=d.geometry;if(!g.__webglVertexBuffer){f=g;f.__webglVertexBuffer=c.createBuffer();f.__webglColorBuffer=c.createBuffer();f=g;h=d;i=f.vertices.length;f.__vertexArray=new Float32Array(i*3);f.__colorArray=new Float32Array(i*3);f.__sortArray=[];f.__webglParticleCount=i;f.__materials=h.materials;z=k=j=void 0;j=0;for(k=h.materials.length;j<k;j++)if(z=h.materials[j],z.attributes){if(f.__webglCustomAttributes===void 0)f.__webglCustomAttributes=
{};for(a in z.attributes){originalAttribute=z.attributes[a];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type==="v4"?size=4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(i*size),attribute.buffer=c.createBuffer(),attribute.buffer.belongsToAttribute=
a,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;f.__webglCustomAttributes[a]=attribute}}g.__dirtyVertices=!0;g.__dirtyColors=!0}I(e.__webglObjects,g,d)}else THREE.MarchingCubes!==void 0&&d instanceof THREE.MarchingCubes?e.__webglObjectsImmediate.push({object:d,opaque:{list:[],count:0},transparent:{list:[],count:0}}):d instanceof THREE.Sprite&&e.__webglSprites.push(d);b.__objectsAdded.splice(0,1)}for(;b.__objectsRemoved.length;){e=b.__objectsRemoved[0];d=b;if(e instanceof
THREE.ShadowVolume)L(d.__webglShadowVolumes,e);else if(e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line)L(d.__webglObjects,e);else if(e instanceof THREE.Sprite){d=d.__webglSprites;g=void 0;for(g=d.length-1;g>=0;g--)d[g]==e&&d.splice(g,1)}else e instanceof THREE.LensFlare?L(d.__webglLensFlares,e):e instanceof THREE.MarchingCubes&&L(d.__webglObjectsImmediate,e);b.__objectsRemoved.splice(0,1)}d=0;for(e=b.__webglObjects.length;d<e;d++)ka(b.__webglObjects[d].object,
b);d=0;for(e=b.__webglShadowVolumes.length;d<e;d++)ka(b.__webglShadowVolumes[d].object,b);d=0;for(e=b.__webglLensFlares.length;d<e;d++)ka(b.__webglLensFlares[d].object,b)};this.setFaceCulling=function(b,d){b?(!d||d=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW),b=="back"?c.cullFace(c.BACK):b=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK),c.enable(c.CULL_FACE)):c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return Ma}};
THREE.WebGLRenderTarget=function(b,d,e){this.width=b;this.height=d;e=e||{};this.wrapS=e.wrapS!==void 0?e.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=e.wrapT!==void 0?e.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=e.magFilter!==void 0?e.magFilter:THREE.LinearFilter;this.minFilter=e.minFilter!==void 0?e.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=e.format!==void 0?e.format:THREE.RGBAFormat;this.type=e.type!==void 0?e.type:
THREE.UnsignedByteType;this.depthBuffer=e.depthBuffer!==void 0?e.depthBuffer:!0;this.stencilBuffer=e.stencilBuffer!==void 0?e.stencilBuffer:!0};
